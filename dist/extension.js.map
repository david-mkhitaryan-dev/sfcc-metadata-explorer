{"version":3,"sources":["../webpack/bootstrap",".././src/extension.ts","../external \"vscode\"",".././src/components/MetadataView.ts",".././src/components/MetadataViewProvider.ts",".././src/components/MetadataNode.ts",".././src/services/OCAPIService.ts","../external \"fs\"",".././node_modules/node-fetch/lib/index.mjs","../external \"stream\"","../external \"http\"","../external \"url\"","../external \"https\"","../external \"zlib\"",".././src/apiConfig.ts",".././src/authorization/OAuth2Token.ts",".././src/services/ICallSetup.ts",".././src/documents/ObjectTypeDefinition.ts",".././src/documents/ObjectAttributeDefinition.ts",".././src/documents/ObjectAttributeValueDefinition.ts",".././src/documents/ObjectAttributeGroup.ts",".././src/helpers/OCAPIHelper.ts",".././src/xmlHandler/XMLHandler.ts",".././node_modules/xmlbuilder/lib/index.js",".././node_modules/xmlbuilder/lib/Utility.js",".././node_modules/xmlbuilder/lib/XMLDOMImplementation.js",".././node_modules/xmlbuilder/lib/XMLDocument.js",".././node_modules/xmlbuilder/lib/XMLDOMConfiguration.js",".././node_modules/xmlbuilder/lib/XMLDOMErrorHandler.js",".././node_modules/xmlbuilder/lib/XMLDOMStringList.js",".././node_modules/xmlbuilder/lib/XMLNode.js",".././node_modules/xmlbuilder/lib/XMLElement.js",".././node_modules/xmlbuilder/lib/NodeType.js",".././node_modules/xmlbuilder/lib/XMLAttribute.js",".././node_modules/xmlbuilder/lib/XMLNamedNodeMap.js",".././node_modules/xmlbuilder/lib/XMLCData.js",".././node_modules/xmlbuilder/lib/XMLCharacterData.js",".././node_modules/xmlbuilder/lib/XMLComment.js",".././node_modules/xmlbuilder/lib/XMLDeclaration.js",".././node_modules/xmlbuilder/lib/XMLDocType.js",".././node_modules/xmlbuilder/lib/XMLDTDAttList.js",".././node_modules/xmlbuilder/lib/XMLDTDEntity.js",".././node_modules/xmlbuilder/lib/XMLDTDElement.js",".././node_modules/xmlbuilder/lib/XMLDTDNotation.js",".././node_modules/xmlbuilder/lib/XMLRaw.js",".././node_modules/xmlbuilder/lib/XMLText.js",".././node_modules/xmlbuilder/lib/XMLProcessingInstruction.js",".././node_modules/xmlbuilder/lib/XMLDummy.js",".././node_modules/xmlbuilder/lib/XMLNodeList.js",".././node_modules/xmlbuilder/lib/DocumentPosition.js",".././node_modules/xmlbuilder/lib/XMLStringifier.js",".././node_modules/xmlbuilder/lib/XMLStringWriter.js",".././node_modules/xmlbuilder/lib/XMLWriterBase.js",".././node_modules/xmlbuilder/lib/WriterState.js",".././node_modules/xmlbuilder/lib/XMLDocumentCB.js",".././node_modules/xmlbuilder/lib/XMLStreamWriter.js"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA,oBAAoB,mCAAM;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kFAAkF;AAClF;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,EAAE,qCAAqC,oCAAoC,iCAAiC,kCAAkC,4EAA4E,qCAAqC,0BAA0B,mCAAM,GAAG;AAClS;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qBAAqB,mCAAM;AAC3B;AACA,iHAAiH,UAAU,IAAI,YAAY;AAC3I;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,IAAI;AACJ,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ,+EAA+E,WAAW,WAAW,YAAY;AACjH;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;;AAEA;AACA;AACA,QAAQ,mBAAmB;AAC3B,YAAY,mBAAmB;AAC/B,eAAe,mBAAmB;AAClC,QAAQ,mBAAmB;AAC3B,QAAQ,mBAAmB;AAC3B,QAAQ;AACR,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,qEAAqE,SAAS;AAC9E;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,4BAA4B,mCAAM;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,oEAAoE,WAAW,SAAS,eAAe;AACvG,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA,yEAAyE,WAAW,IAAI,YAAY;AACpG;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA,6CAA6C,WAAW,eAAe,YAAY;AACnF;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,IAAI;AACJ;AACA,4EAA4E,WAAW,IAAI,YAAY;AACvG;AACA,GAAG;AACH,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA,qBAAqB,mCAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,qBAAqB;AACrB,EAAE;AACF;AACA,4CAA4C;AAC5C,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA,8BAA8B,WAAW,mBAAmB;AAC5D,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA,EAAE;AACF;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,WAAW,KAAK;AAChB;AACA,yBAAyB,KAAK;AAC9B;AACA;;AAEA;AACA,YAAY,MAAM;AAClB;AACA,yBAAyB,MAAM;AAC/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB,aAAa,MAAM;AACnB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,KAAK;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,OAAO,mBAAmB;AAC1B,WAAW,mBAAmB;AAC9B,OAAO,mBAAmB;AAC1B,UAAU,mBAAmB;AAC7B,OAAO,mBAAmB;AAC1B,UAAU,mBAAmB;AAC7B,QAAQ,mBAAmB;AAC3B,UAAU,mBAAmB;AAC7B,WAAW;AACX,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA,EAAE;AACF;AACA,EAAE;AACF;AACA,EAAE;AACF;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA,qBAAqB,iCAAI;;AAEzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA,OAAO,mBAAmB;AAC1B,UAAU,mBAAmB;AAC7B,MAAM,mBAAmB;AACzB,cAAc,mBAAmB;AACjC,WAAW,mBAAmB;AAC9B,SAAS;AACT,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;AAEA;AACA,kBAAkB,gCAAG;AACrB,mBAAmB,gCAAG;;AAEtB,gDAAgD,mCAAM;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,gDAAgD;AAChD;AACA;AACA;AACA,IAAI;AACJ;AACA,6BAA6B,MAAM;AACnC;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH,iEAAiE;;AAEjE;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA,UAAU,mBAAmB;AAC7B,OAAO,mBAAmB;AAC1B,WAAW,mBAAmB;AAC9B,YAAY,mBAAmB;AAC/B,SAAS,mBAAmB;AAC5B,UAAU;AACV,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,+CAA+C,mCAAM;AACrD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,wBAAwB;AACxB;AACA;AACA;AACA,EAAE;AACF;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,sBAAsB,mCAAM;AAC5B,oBAAoB,gCAAG;;AAEvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,gDAAgD,kCAAK,GAAG,iCAAI;AAC5D;;AAEA;;AAEA;AACA;AACA;AACA,+CAA+C,mCAAM;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,kDAAkD,YAAY;AAC9D;AACA,KAAK;AACL,IAAI;AACJ;;AAEA;AACA,uCAAuC,YAAY,mBAAmB,YAAY;AAClF;AACA,GAAG;;AAEH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,8DAA8D,YAAY;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,6DAA6D,YAAY;AACzE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,iCAAI;AACf,iBAAiB,iCAAI;AACrB;;AAEA;AACA;AACA,qBAAqB,iCAAI;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,iCAAI;AAC3B,MAAM;AACN,uBAAuB,iCAAI;AAC3B;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,EAAE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEe,oEAAK,EAAC;AAC6B;;;;;;;ACzkDlD,mC;;;;;;ACAA,iC;;;;;;ACAA,gC;;;;;;ACAA,kC;;;;;;ACAA,iC;;;;;;;;ACAA;;;;GAIG;;AAEU,iBAAS,GAAG;IACvB,QAAQ,EAAE,gCAAgC;IAC1C,cAAc,EAAE,gCAAgC;IAChD,SAAS,EAAE;QAET;;;oFAG4E;QAC5E,uBAAuB,EAAE;YACvB,GAAG,EAAE,MAAM;YACX,cAAc,EAAE;gBA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GAAG;;AAEH,CAAC;;;;;;;AC/BD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,kBAAkB,mBAAO,CAAC,EAAW;;AAErC,yBAAyB,mBAAO,CAAC,EAAwB;;AAEzD,wBAAwB,mBAAO,CAAC,EAAuB;;AAEvD,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC,mBAAmB,mBAAO,CAAC,EAAkB;;AAE7C,oBAAoB,mBAAO,CAAC,EAAmB;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACjPD;AACA;AACA;;AAEA,uBAAuB,mBAAO,CAAC,EAAsB;;AAErD,qBAAqB,mBAAO,CAAC,EAAoB;;AAEjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC/DD;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACfD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC3BD;AACA;AACA;AACA,gBAAgB;;AAEhB,SAAS,mBAAO,CAAC,EAAW;;AAE5B;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mBAAO,CAAC,EAAc;AAC3C,mBAAmB,mBAAO,CAAC,EAAY;AACvC,qBAAqB,mBAAO,CAAC,EAAc;AAC3C,yBAAyB,mBAAO,CAAC,EAAkB;AACnD,qBAAqB,mBAAO,CAAC,EAAc;AAC3C,iBAAiB,mBAAO,CAAC,EAAU;AACnC,kBAAkB,mBAAO,CAAC,EAAW;AACrC,mCAAmC,mBAAO,CAAC,EAA4B;AACvE,mBAAmB,mBAAO,CAAC,EAAY;AACvC,mBAAmB,mBAAO,CAAC,EAAY;AACvC,sBAAsB,mBAAO,CAAC,EAAe;AAC7C,0BAA0B,mBAAO,CAAC,EAAmB;AACrD,2BAA2B,mBAAO,CAAC,EAAoB;AACvD;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA,WAAW;AACX,0CAA0C,UAAU;AACpD;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,UAAU;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,mCAAmC;AACzF;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AChxBD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,QAAQ,mBAAO,CAAC,EAAW;;AAE3B,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC,iBAAiB,mBAAO,CAAC,EAAgB;;AAEzC,oBAAoB,mBAAO,CAAC,EAAmB;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD,mCAAmC;AACxF;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACzSD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;ACtBD;AACA;AACA;;AAEA,aAAa,mBAAO,CAAC,EAAY;;AAEjC,YAAY,mBAAO,CAAC,EAAW;;AAE/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP,4BAA4B,aAAa;AACzC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC3GD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACzDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAY;;AAEjC,qBAAqB,mBAAO,CAAC,EAAoB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACnCD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,EAAW;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC9ED;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAY;;AAEjC,qBAAqB,mBAAO,CAAC,EAAoB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACnCD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAW;;AAEhC,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC1CD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAW;;AAEhC,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,EAAgB;;AAEzC,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,mBAAmB,mBAAO,CAAC,EAAkB;;AAE7C,oBAAoB,mBAAO,CAAC,EAAmB;;AAE/C;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACzLD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oDAAoD;AACpD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACtDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAW;;AAEhC,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AChGD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACrCD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACnDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAY;;AAEjC,YAAY,mBAAO,CAAC,EAAW;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AClCD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAY;;AAEjC,qBAAqB,mBAAO,CAAC,EAAoB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;ACpED;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAY;;AAEjC,qBAAqB,mBAAO,CAAC,EAAoB;;AAEjD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AChDD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,YAAY,mBAAO,CAAC,EAAW;;AAE/B,aAAa,mBAAO,CAAC,EAAY;;AAEjC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC9BD;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC3BD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;ACXD;AACA;AACA;AACA,4BAA4B,mBAAmB,gCAAgC,GAAG,EAAE;AACpF,gBAAgB;;AAEhB;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,yCAAyC,sBAAsB,sBAAsB,wBAAwB;AAC7G;;AAEA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D,yCAAyC,sBAAsB,wBAAwB,wBAAwB,wBAAwB,wBAAwB;AAC/J;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC/OD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AClCD;AACA;AACA;AACA,gBAAgB;;AAEhB,WAAW,mBAAO,CAAC,EAAW;;AAE9B,aAAa,mBAAO,CAAC,EAAY;;AAEjC,mBAAmB,mBAAO,CAAC,EAAkB;;AAE7C,eAAe,mBAAO,CAAC,EAAc;;AAErC,aAAa,mBAAO,CAAC,EAAY;;AAEjC,eAAe,mBAAO,CAAC,EAAc;;AAErC,eAAe,mBAAO,CAAC,EAAc;;AAErC,WAAW,mBAAO,CAAC,EAAU;;AAE7B,YAAY,mBAAO,CAAC,EAAW;;AAE/B,6BAA6B,mBAAO,CAAC,EAA4B;;AAEjE,aAAa,mBAAO,CAAC,EAAY;;AAEjC,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,EAAgB;;AAEzC,mBAAmB,mBAAO,CAAC,EAAkB;;AAE7C,gBAAgB,mBAAO,CAAC,EAAe;;AAEvC;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,8BAA8B;AAC9B,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC,UAAU;AACjaD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;;;;;;ACTD;AACA;AACA;AACA,gBAAgB;;AAEhB,QAAQ,mBAAO,CAAC,EAAW;;AAE3B,aAAa,mBAAO,CAAC,EAAY;;AAEjC,gBAAgB,mBAAO,CAAC,EAAe;;AAEvC,eAAe,mBAAO,CAAC,EAAc;;AAErC,aAAa,mBAAO,CAAC,EAAY;;AAEjC,eAAe,mBAAO,CAAC,EAAc;;AAErC,WAAW,mBAAO,CAAC,EAAU;;AAE7B,YAAY,mBAAO,CAAC,EAAW;;AAE/B,6BAA6B,mBAAO,CAAC,EAA4B;;AAEjE,mBAAmB,mBAAO,CAAC,EAAkB;;AAE7C,eAAe,mBAAO,CAAC,EAAc;;AAErC,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,iBAAiB,mBAAO,CAAC,EAAgB;;AAEzC,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,mBAAmB,mBAAO,CAAC,EAAkB;;AAE7C,iBAAiB,mBAAO,CAAC,EAAgB;;AAEzC,mBAAmB,mBAAO,CAAC,EAAkB;;AAE7C,oBAAoB,mBAAO,CAAC,EAAmB;;AAE/C,gBAAgB,mBAAO,CAAC,EAAe;;AAEvC;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,SAAS;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC,SAAS;AACjD;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC;;;;;;;AC/gBD;AACA;AACA;AACA,sCAAsC,0BAA0B,yDAAyD,EAAE,kBAAkB,0BAA0B,EAAE,mCAAmC,8BAA8B,oCAAoC,cAAc,EAAE;AAC9R,gBAAgB;;AAEhB,aAAa,mBAAO,CAAC,EAAY;;AAEjC,kBAAkB,mBAAO,CAAC,EAAiB;;AAE3C,gBAAgB,mBAAO,CAAC,EAAe;;AAEvC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,UAAU;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,SAAS;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,sCAAsC,SAAS;AAC/C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA,GAAG;;AAEH,CAAC","file":"extension.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","'use strict';\n\nimport { commands, ExtensionContext, window, Disposable } from 'vscode';\nimport { MetadataView } from './components/MetadataView';\nimport OCAPIHelper from './helpers/OCAPIHelper';\nimport { MetadataNode } from './components/MetadataNode';\nimport XMLHandler from './xmlHandler/XMLHandler';\n\n/**\n * The entry point for the extension. This lifecycle method is called when the\n * extension is first loaded.\n *\n * @param context - The context object used to subscribe commands with.\n */\nexport function activate(context: ExtensionContext) {\n  // Setup view for System Object Definitions view.\n  const metaView: MetadataView = new MetadataView(context);\n  const ocapiHelper = new OCAPIHelper(metaView);\n  const xmlHandler = new XMLHandler();\n  metaView.getDataFromProvider('systemObjectDefinitions');\n\n  /**\n   * Binds the handler function for the event. The command has been defined in\n   * the package.json file.\n   *\n   * @listens extension.sfccexplorer.systemobject.addattribute\n   */\n  const addAttributeDisposable: Disposable = commands.registerCommand(\n    'extension.sfccexplorer.systemobject.addattribute',\n    (metaNode: MetadataNode) => {\n      ocapiHelper\n        .addAttributeNode(metaNode)\n        .then(data => {\n          metaView.currentProvider.refresh();\n        })\n        .catch(err => {\n          window.showErrorMessage('Unable to add attribute: {0}', err);\n          console.error(err);\n        });\n    }\n  );\n\n  /**\n   * Binds the handler function for the event. The command has been defined in\n   * the package.json file.\n   *\n   * @listens extension.sfccexplorer.systemobject.addattribute\n   */\n  const deleteAttributeDisposable: Disposable = commands.registerCommand(\n    'extension.sfccexplorer.systemobject.deleteattribute',\n    (metaNode: MetadataNode) => {\n      ocapiHelper\n        .deleteAttributeDefinition(metaNode)\n        .then(data => {\n          window.showInformationMessage('Attribute Deleted Successfully');\n          console.log(data);\n          metaView.currentProvider.refresh();\n        })\n        .catch(err => {\n          window.showErrorMessage('Unable to delete attribute: {0}', err);\n          console.log(err);\n        });\n    }\n  );\n\n  /**\n   * Binds the handler for the TreeViewProvider refresh action to its handler\n   * function.\n   *\n   * @listens extension.sfccexplorer.refresh\n   */\n  const refreshTreeDisposable: Disposable = commands.registerCommand(\n    'extension.sfccexplorer.refresh',\n    (metaDataView: any) => {\n      metaView.currentProvider.refresh();\n    }\n  );\n\n  /**\n   * Binds the OCAPI helper method to handle the assigning of attributes to\n   * attribute groups to the VSCode event.\n   *\n   * @listens extension.sfccexplorer.systemobjectattribute.addtogroup\n   */\n  const assignToGroupDisposable: Disposable = commands.registerCommand(\n    'extension.sfccexplorer.systemobjectattribute.addtogroup',\n    (metaNode: MetadataNode) => {\n      ocapiHelper\n        .assignAttributesToGroup(metaNode)\n        .then(data => {\n          window.showInformationMessage(\n            'Attribute successfully added to group.');\n          metaView.currentProvider.refresh();\n        })\n        .catch(err => {\n          window.showErrorMessage('Unable to add attribute: {0}', err);\n          console.log(err);\n        });\n    }\n  );\n\n  /**\n   * Binds the handler for the context menu command to set the default value of\n   * a system object attribute.\n   *\n   * @listens extension.sfccexplorer.systemobjectattribute.setdefault\n   */\n  const setDefaultDisposable: Disposable = commands.registerCommand(\n    'extension.sfccexplorer.systemobjectattribute.setdefault',\n    (metaNode: MetadataNode) => {\n      ocapiHelper\n        .setDefaultAttributeValue(metaNode)\n        .then(data => {\n          metaView.currentProvider.refresh();\n        })\n        .catch(err => {\n          window.showErrorMessage('Unable to set default value: {0}', err);\n          console.log(err);\n        });\n    }\n  );\n\n  /**\n   * Binds the handler for the context menu command to set the default value of\n   * a system object attribute.\n   *\n   * @listens extension.sfccexplorer.objectattributegroup.addgroup\n   */\n  const addGroupDisposable: Disposable = commands.registerCommand(\n    'extension.sfccexplorer.objectattributegroup.addgroup',\n    (metaNode: MetadataNode) => {\n      ocapiHelper\n        .addAttributeGroup(metaNode)\n        .then(data => {\n          metaView.currentProvider.refresh();\n        })\n        .catch(err => {\n          // If the user canceled the action, then don't show an error.\n          if (typeof err.error === 'boolean' &&\n            err.error === false\n          ) {\n            return;\n          }\n\n          window.showErrorMessage('Could not create attribute group: {0}', err);\n          console.log(err);\n        });\n    }\n  );\n\n  /**\n   * Binds the handler to the context menu action to get the XML from a system\n   * object attribute definition.\n   *\n   * @listens extension.sfccexplorer.systemobjectattribute.getxml\n   */\n  const getAttributeXMLDisposable: Disposable = commands.registerCommand(\n    'extension.sfccexplorer.systemobjectattribute.getxml',\n    (metaNode: MetadataNode) => {\n      xmlHandler.getXMLFromNode(metaNode);\n    }\n  );\n\n  context.subscriptions.push(getAttributeXMLDisposable);\n  context.subscriptions.push(addGroupDisposable);\n  context.subscriptions.push(assignToGroupDisposable);\n  context.subscriptions.push(setDefaultDisposable);\n  context.subscriptions.push(addAttributeDisposable);\n  context.subscriptions.push(refreshTreeDisposable);\n  context.subscriptions.push(deleteAttributeDisposable);\n}\n\n// this method is called when your extension is deactivated\nexport function deactivate() {\n  /** @todo: Implement deactivate() lifecycle method in extension.ts */\n}\n","module.exports = require(\"vscode\");","/**\n * @file MetadataView.ts\n * @fileoverview - Contains a class that defines the Metadata Explorer view\n * container and the contained views such as the system object definitions view.\n */\n\nimport { ExtensionContext, EventEmitter, window } from 'vscode';\nimport { MetadataViewProvider } from './MetadataViewProvider';\nimport { MetadataNode } from './MetadataNode';\n\n/**\n * @class MetadataView\n * @classdesc - A class with methods and properties for controlling what is\n *    displayed to the user when viewing the metadata explorer's view container.\n */\nexport class MetadataView {\n  private _context: ExtensionContext = null;\n  private _providers: Array<MetadataViewProvider> = [];\n  public currentProvider: MetadataViewProvider = null;\n  public _onMetaDataChange: EventEmitter<\n    MetadataNode | undefined\n  > = new EventEmitter<MetadataNode | undefined>();\n\n  /**\n   * @constructor\n   * @param {ExtensionContext} context - The extension context instance. This is\n   *    used for subscribing to, and triggering VSCode events.\n   */\n  constructor(context: ExtensionContext) {\n    this._context = context;\n    this._onMetaDataChange = new EventEmitter<MetadataNode | undefined>();\n  }\n\n  /* ========================================================================\n   * Public Instance Methods\n   * ======================================================================== */\n\n  /**\n   * Populates the tree view with the specified type of SFCC data. When\n   * called, this method will invoke the OCAPIService class to make a call\n   * to the configured sandbox, and then render the individual SFCC metadata\n   * items.\n   *\n   * @param {string} [providerType = 'systemObjectDefinitions'] - The type of\n   *    data entities that the provider should serve to the tree view for\n   *    rendering.\n   */\n  public getDataFromProvider(providerType: string = 'systemObjectDefinitions') {\n    this.currentProvider = this._getDataProvider(providerType);\n\n    this._context.subscriptions.push(\n      window.registerTreeDataProvider(\n        providerType + 'View',\n        this.currentProvider\n      )\n    );\n  }\n\n  /* ========================================================================\n   * Private Instance Methods\n   * ======================================================================== */\n\n  /**\n   * Gets an instance of the MetadataViewProvider for populating the\n   * Tree View with entities via a call to the OCAPIService class.\n   *\n   * @param {string} providerType - The name of the type of SFCC object that the\n   *    data provider should retrieve via an OCAPI call. The name should be in\n   *    cammel case (i.e. System Object Definitions = systemObjectDefinitions).\n   */\n  private _getDataProvider(providerType: string): MetadataViewProvider {\n    // Check if there is already a MetadataViewProvider for the correct type.\n    let dataProvider: MetadataViewProvider;\n    if (this._providers.length) {\n      dataProvider = this._providers.find(\n        (pr: MetadataViewProvider) => pr.providerType === providerType\n      );\n    }\n\n    // If no existing provider for the specified type, then create it.\n    if (!dataProvider) {\n      dataProvider = new MetadataViewProvider(\n        providerType,\n        this._onMetaDataChange\n      );\n      this._providers.push(dataProvider);\n    }\n\n    return dataProvider;\n  }\n}\n","/**\n * @file MetadataViewProvider.ts\n * @fileoverview - This file holds the MetadataViewProvider class implementation\n * which is used for getting SFCC Metadata from the sandbox instance and\n * populating the tree view instance.\n */\n\nimport { MetadataNode } from './MetadataNode';\nimport {\n  Event,\n  EventEmitter,\n  TreeDataProvider,\n  TreeItemCollapsibleState,\n  WorkspaceConfiguration,\n  workspace\n} from 'vscode';\nimport { OCAPIService } from '../services/OCAPIService';\nimport { ICallSetup } from '../services/ICallSetup';\nimport ObjectTypeDefinition from '../documents/ObjectTypeDefinition';\nimport ObjectAttributeDefinition from '../documents/ObjectAttributeDefinition';\nimport ObjectAttributeGroup from '../documents/ObjectAttributeGroup';\nimport ObjectAttributeValueDefinition from '../documents/ObjectAttributeValueDefinition';\n\n/**\n * @class MetadataViewProvider\n * @classdesc A generic tree data provider implementation that can be used for\n *    several getting data from the OCAPI service, and wiring the results to the\n *    TreeView instance.\n */\nexport class MetadataViewProvider\n  implements TreeDataProvider<MetadataNode | undefined> {\n  // Declare memeber variables.\n  readonly onDidChangeTreeData?: Event<MetadataNode | undefined>;\n  public providerType: string = '';\n  private eventEmitter: EventEmitter<MetadataNode | undefined> = null;\n  private service: OCAPIService = new OCAPIService();\n\n  /**\n   *\n   * @param {string} providerType - The type of provider being initialized;\n   * @param {EventEmitter<MetadataNode | undefined>} eventEmitter\n   */\n  constructor(\n    providerType: string,\n    eventEmitter: EventEmitter<MetadataNode | undefined>\n  ) {\n    this.providerType = providerType;\n    this.eventEmitter = eventEmitter;\n    this.onDidChangeTreeData = this.eventEmitter.event;\n  }\n\n  /* ========================================================================\n   * Public Instance Methods\n   * ======================================================================== */\n\n  /**\n   * Refreshes the TreeView.\n   */\n  public refresh(): void {\n    this.eventEmitter.fire();\n  }\n\n  /**\n   * Returns the individual TreeItem instance\n   * @param {MetadataNode} element - The element associated with the given\n   *    TreeItem instance.\n   * @return {TreeItem | Thenable<TreeItem>} - Returns the instance of the\n   *    TreeItem or a Promise that resolves to the TreeItem instance.\n   */\n  public getTreeItem(element: MetadataNode): MetadataNode {\n    return element;\n  }\n\n  /**\n   * Gets the children elements that are bound to the TreeItem instances for\n   * rendering of the TreeView instance.\n   * @param {MetadataNode} [element] - An optional parameter to use as the\n   *    starting point for expansion of the tree when selected.\n   * @return {Promise<MetadataNode[]>}\n   */\n  public async getChildren(element?: MetadataNode): Promise<MetadataNode[]> {\n    try {\n      if (!element) {\n        // Get the base nodes of the tree.\n        return this.getRootChildren(element);\n      } else {\n        // Get children of expandable node types\n        if (element.expandable) {\n          const nodeType = element.nodeType;\n          const parent = element.parentId.split('.').pop();\n          if (nodeType === 'baseNodeName') {\n            return this.getBaseNodeChildren(element);\n          } else if (nodeType === 'objectTypeDefinition') {\n            return this.getObjectDefinitionChildren(element);\n          } else if (nodeType === 'parentContainer') {\n            return this.getAttributeOrGroupContainerChildren(element);\n          } else if (nodeType === 'objectAttributeDefinition') {\n            return this.getAttributeDefinitionChildren(element);\n          } else if (nodeType === 'objectAttributeGroup') {\n            return this.getAttributeGroupChildren(element);\n          } else if (nodeType === 'objectAttributeValueDefinition') {\n            return this.getAttributeValueDefinitionChildren(element);\n          } else if (nodeType === 'stringList') {\n            return this.getStringListChildren(element);\n          }\n        } else {\n          // Return an empty array for types that are not expandable.\n          return [];\n        }\n      }\n    } catch (e) {\n      return Promise.reject(e.message);\n    }\n  }\n\n  /**\n   * Gets the children elements of parent container type nodes. This\n   * method calls OCAPI to get attribute definitions or the attribute groups\n   * depending on which node was expanded. This method is used for both custom &\n   * system type object definitions.\n   * @param {MetadataNode} element - The MetadataNode instance.\n   * @return {Promise<MetadataNode[]>} - Returns a promise that will resolve to\n   *    the child MetadataNodes array.\n   */\n  private async getAttributeOrGroupContainerChildren(\n    element: MetadataNode\n  ): Promise<MetadataNode[]> {\n    const path = element.parentId.split('.');\n    const objectType = path.pop();\n    const parentType = path.pop();\n    const isAttribute = element.name !== 'Attribute Groups';\n    let _callSetup: ICallSetup = null;\n    let _callResult: any;\n\n    // If this is the node for attribute definitions.\n    if (isAttribute) {\n      // Get the System/Custom Object attributes.// Make the call to the OCAPI Service.\n      try {\n        _callSetup = await this.service.getCallSetup(\n          parentType,\n          'getAttributes',\n          {\n            select: '(**)',\n            count: 500,\n            objectType: objectType\n          }\n        );\n\n        _callResult = await this.service.makeCall(_callSetup);\n      } catch (e) {\n        throw new Error(e.toString());\n      }\n\n      // If the API call returns data create the first level of a tree.\n      if (\n        !_callResult.error &&\n        typeof _callResult.data !== 'undefined' &&\n        Array.isArray(_callResult.data)\n      ) {\n        return _callResult.data.map(resultObj => {\n          return new MetadataNode(\n            resultObj.id,\n            TreeItemCollapsibleState.Collapsed,\n            {\n              parentId: element.parentId + '.' + objectType,\n              objectAttributeDefinition: new ObjectAttributeDefinition(\n                resultObj\n              ),\n              displayDescription: resultObj.display_name\n                ? resultObj.display_name.default\n                : ''\n            }\n          );\n        });\n      }\n\n      // If there is an error display a single node indicating that there\n      // was a failure to load the object definitions.\n      return [\n        new MetadataNode('Unable to load...', TreeItemCollapsibleState.None, {\n          parentId: 'root.systemObjectDefinitions.' + objectType\n        })\n      ];\n    } else {\n      // Make the call to the OCAPI Service to get the attribute groups.\n      // Tree branch for attribute groups.\n      _callSetup = await this.service.getCallSetup(\n        'systemObjectDefinitions',\n        'getAttributeGroups',\n        {\n          select: '(**)',\n          expand: 'definition',\n          objectType: objectType\n        }\n      );\n\n      _callResult = await this.service.makeCall(_callSetup);\n\n      // If the API call returns data create the first level of a tree.\n      if (\n        !_callResult.error &&\n        typeof _callResult.data !== 'undefined' &&\n        Array.isArray(_callResult.data)\n      ) {\n        return _callResult.data.map(resultObj => {\n          return new MetadataNode(\n            resultObj.id,\n            TreeItemCollapsibleState.Collapsed,\n            {\n              parentId: element.parentId + '.' + objectType,\n              objectAttributeGroup: new ObjectAttributeGroup(resultObj),\n              displayDescription: resultObj.display_name\n                ? resultObj.display_name.default\n                : ''\n            }\n          );\n        });\n      } else if (\n        !_callResult.error &&\n        typeof _callResult.count !== 'undefined' &&\n        _callResult.count === 0\n      ) {\n        // If there are no attribute groups defined then create a single node\n        // with a message for the user.\n        return [\n          new MetadataNode(\n            'No attribute groups defined',\n            TreeItemCollapsibleState.None,\n            {\n              parentId: element.parentId + '.' + objectType\n            }\n          )\n        ];\n      }\n\n      // If there is an error display a single node indicating that there\n      // was a failure to load the object definitions.\n      return [\n        new MetadataNode('Unable to load...', TreeItemCollapsibleState.None, {\n          parentId: element.parentId + '.' + objectType\n        })\n      ];\n    }\n  }\n\n  /**\n   * Gets the children elements of base tree nodes.\n   * @param {MetadataNode} element - The MetadataNode instance.\n   * @return {Promise<MetadataNode[]>} - Returns a promise that will resolve to\n   *    the child MetadataNodes array.\n   */\n  private async getBaseNodeChildren(\n    element: MetadataNode\n  ): Promise<MetadataNode[]> {\n    const baseName = element.baseNodeName;\n\n    /**\n     * @todo: REFACTOR: Use OCAPI system_object_definition_search call to filter\n     *    results for only system or custom object definitions on the server\n     *    before returning results.\n     */\n    const _callSetup: ICallSetup = await this.service.getCallSetup(\n      baseName,\n      'getAll',\n      {\n        count: 500,\n        select: '(**)'\n      }\n    );\n\n    // Call the OCAPI service.\n    const _callResult = await this.service.makeCall(_callSetup);\n\n    // If the API call returns data create a tree.\n    if (_callResult.data && Array.isArray(_callResult.data)) {\n      // Add the display name to the custom objects so that they can be\n      // easily identified as custom.\n      return _callResult.data.filter(obj => {\n        return baseName === 'systemObjectDefinitions' ?\n          (obj.object_type !== 'CustomObject') :\n          (obj.object_type === 'CustomObject' && obj.display_name);\n      }).map(filterdObj => {\n        // Get the display name for the tree node.\n        let name = '';\n        if (baseName === 'systemObjectDefinitions') {\n          name = filterdObj.object_type;\n        } else if (baseName === 'customObjectDefinitions') {\n          name = filterdObj.display_name.default;\n        }\n\n        // Create a MetaDataNode instance which implements the TreeItem\n        // interface and holds the data of the document type that it\n        // represents.\n        return new MetadataNode(name, TreeItemCollapsibleState.Collapsed, {\n          parentId: 'root.' + baseName,\n          objectTypeDefinition: new ObjectTypeDefinition(filterdObj),\n          displayDescription: ' '\n        });\n      });\n    }\n  }\n\n  /**\n   * Gets the base nodes of the tree that can be expanded for viewing data types.\n   * @param {MetadataNode} element - The MetadataNode instance.\n   * @return {Promise<MetadataNode[]>} - Returns a promise that will resolve to\n   *    the child MetadataNodes array.\n   */\n  private async getRootChildren(\n    element: MetadataNode\n  ): Promise<MetadataNode[]> {\n    const metaNodes: MetadataNode[] = [];\n\n    // Get the workspace configuration object for all configuration settings\n    // related to this extension.\n    const workspaceConfig: WorkspaceConfiguration = workspace.getConfiguration(\n      'extension.sfccmetadata'\n    );\n\n    // Get the VSCode settings for display of each base tree node.\n    // - Show System Object Definitions\n    const showSystemObjects: boolean = Boolean(\n      workspaceConfig.get('explorer.systemobjects')\n    );\n\n    // - Show Custom Object Definitions\n    const showCustomObjects: boolean = Boolean(\n      workspaceConfig.get('explorer.customobjects')\n    );\n\n    // If the user config is enabled, then show the option.\n    if (showSystemObjects) {\n      metaNodes.push(\n        new MetadataNode(\n          'System Object Definitions',\n          TreeItemCollapsibleState.Collapsed,\n          {\n            parentId: 'root',\n            baseNodeName: 'systemObjectDefinitions'\n          }\n        )\n      );\n    }\n\n    // If display of Custom Object Definitions is enabled, add node to tree.\n    if (showCustomObjects) {\n      metaNodes.push(\n        new MetadataNode(\n          'Custom Object Definitions',\n          TreeItemCollapsibleState.Collapsed,\n          {\n            parentId: 'root',\n            baseNodeName: 'customObjectDefinitions'\n          }\n        )\n      );\n    }\n\n    return Promise.resolve(metaNodes);\n  }\n\n  /**\n   * Gets the children elements of System & Custom object type nodes.\n   * @param {MetadataNode} element - The MetadataNode instance.\n   * @return {Promise<MetadataNode[]>}\n   */\n  private async getObjectDefinitionChildren(\n    element: MetadataNode\n  ): Promise<MetadataNode[]> {\n    const displayTextMap = {\n      objectAttributeDefinitions: 'Attribute Definitions',\n      objectAttributeGroups: 'Attribute Groups'\n    };\n\n    // Setup parent nodes for the attribute definition & the attribute\n    // Group nodes to be added to.\n    return Object.keys(displayTextMap).map(ctnrName => {\n      const metaNode = new MetadataNode(\n        displayTextMap[ctnrName],\n        element.parentId.indexOf('customObjectDefinitions') > -1 ?\n          TreeItemCollapsibleState.None :\n          TreeItemCollapsibleState.Collapsed,\n        {\n          displayDescription:\n            ctnrName === 'objectAttributeDefinitions'\n              ? element.objectTypeDefinition.attributeDefinitionCount.toString()\n              : element.objectTypeDefinition.attributeGroupCount.toString(),\n          parentContainer: ctnrName,\n          parentId:\n            element.parentId + '.' + element.objectTypeDefinition.objectType\n        }\n      );\n\n      return metaNode;\n    });\n  }\n\n  /**\n   * Gets the children elements of AttributeValueDefinition type nodes.\n   * @param {MetadataNode} element - The MetadataNode instance.\n   * @return {Promise<MetadataNode[]>}\n   */\n  private async getAttributeValueDefinitionChildren(\n    element: MetadataNode\n  ): Promise<MetadataNode[]> {\n    return Object.keys(element.objectAttributeValueDefinition).map(key => {\n      const value = element.objectAttributeValueDefinition[key];\n\n      if (\n        typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean'\n      ) {\n        // == Primitive Types\n        return new MetadataNode(\n          key + ': ' + value,\n          TreeItemCollapsibleState.None,\n          {\n            parentId: element.parentId + 'objectAttributeValueDefinition'\n          }\n        );\n      } else {\n        // == Localized String\n        return new MetadataNode(\n          key + ': ' + value.default,\n          TreeItemCollapsibleState.None,\n          {\n            parentId: element.parentId + 'objectAttributeValueDefinition'\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Gets the children elements of ObjectAttributeGroup type nodes.\n   * @param {MetadataNode} element - The MetadataNode instance.\n   * @return {Promise<MetadataNode[]>}\n   */\n  private async getAttributeGroupChildren(\n    element: MetadataNode\n  ): Promise<MetadataNode[]> {\n    const childNodes: MetadataNode[] = [];\n    const attrGroup = element.objectAttributeGroup;\n    const hasAttributes = attrGroup.attributeDefinitionsCount > 0;\n\n    // Attribute Definitions\n    if (hasAttributes) {\n      const attrDefTitles = attrGroup.attributeDefinitions.map(\n        attrDef => attrDef.id\n      );\n\n      childNodes.push(\n        new MetadataNode('Attributes', TreeItemCollapsibleState.Collapsed, {\n          parentId: element.parentId + '.' + element.id,\n          stringList: attrDefTitles,\n          displayDescription: attrGroup.attributeDefinitionsCount.toString()\n        })\n      );\n    }\n\n    const nodeMap: Object = {\n      displayName: 'display name'\n    };\n\n    [\n      'id',\n      'description',\n      'displayName',\n      'internal',\n      'position',\n      'link'\n    ].forEach(property => {\n      const propertyNode: MetadataNode = new MetadataNode(\n        nodeMap[property] || property,\n        TreeItemCollapsibleState.None,\n        {\n          parentId: element.parentId + '.' + attrGroup.id,\n          displayDescription: attrGroup[property]\n        }\n      );\n\n      childNodes.push(propertyNode);\n    });\n\n    return Promise.resolve(childNodes);\n  }\n\n  /**\n   * Gets the children elements of ObjectAttributeDefinition type nodes.\n   * @param {MetadataNode} element - The MetadataNode instance.\n   * @return {Promise<MetadataNode[]>}\n   */\n  private async getAttributeDefinitionChildren(\n    element: MetadataNode\n  ): Promise<MetadataNode[]> {\n    const objAttrDef: ObjectAttributeDefinition =\n      element.objectAttributeDefinition;\n\n    // Loop through the member properties and handle each possible type\n    // for display as a node on the tree.\n    return Object.keys(objAttrDef).map(key => {\n      // == Primitive Types\n      if (\n        typeof objAttrDef[key] === 'string' ||\n        typeof objAttrDef[key] === 'number' ||\n        typeof objAttrDef[key] === 'boolean'\n      ) {\n        return new MetadataNode(\n          key + ' : ' + objAttrDef[key],\n          TreeItemCollapsibleState.None,\n          {\n            parentId:\n              element.parentId + '.' + element.objectAttributeDefinition.id\n          }\n        );\n      } else if (\n        // == Localized Strings\n        typeof objAttrDef[key] === 'object' &&\n        objAttrDef[key] !== null &&\n        typeof objAttrDef[key].default === 'string'\n      ) {\n        return new MetadataNode(\n          key + ' : ' + objAttrDef[key].default,\n          TreeItemCollapsibleState.None,\n          {\n            parentId:\n              element.parentId + '.' + element.objectAttributeDefinition.id\n          }\n        );\n      } else if (objAttrDef[key] instanceof ObjectAttributeValueDefinition) {\n        // == ObjectAttributeValueDefinition\n        if (typeof objAttrDef[key].id !== 'undefined') {\n          return new MetadataNode(\n            key + ': ' + objAttrDef[key].id,\n            TreeItemCollapsibleState.Collapsed,\n            {\n              objectAttributeValueDefinition: objAttrDef[key],\n              parentId:\n                element.parentId + '.' + element.objectAttributeDefinition.id\n            }\n          );\n        }\n        return new MetadataNode(\n          key + ': (undefined)',\n          TreeItemCollapsibleState.None,\n          {\n            objectAttributeValueDefinition: objAttrDef[key],\n            parentId:\n              element.parentId + '.' + element.objectAttributeDefinition.id\n          }\n        );\n      }\n    });\n  }\n\n  /**\n   * Gets the children elements simple string array type nodes.\n   * @param {MetadataNode} element - The MetadataNode instance.\n   * @return {Promise<MetadataNode[]>}\n   */\n  private async getStringListChildren(\n    element: MetadataNode\n  ): Promise<MetadataNode[]> {\n    return element.stringList.map(\n      str =>\n        new MetadataNode(str, TreeItemCollapsibleState.None, {\n          parentId: element.parentId + '.' + element.name\n        })\n    );\n  }\n}\n","/**\n * @file MetadataNode.ts\n * @fileoverview - This file contains a class that is used for creating nodes\n * on a tree view for display of SFCC metadata objects. This is a generic class used\n */\n\nimport { Command, TreeItemCollapsibleState, TreeItem } from 'vscode';\nimport INodeData from '../interfaces/INodeData';\nimport ObjectAttributeDefinition from '../documents/ObjectAttributeDefinition';\nimport ObjectAttributeGroup from '../documents/ObjectAttributeGroup';\nimport ObjectTypeDefinition from '../documents/ObjectTypeDefinition';\nimport ObjectAttributeValueDefinition from '../documents/ObjectAttributeValueDefinition';\n\n/**\n * @class MetadataNode\n * @extends TreeItem\n * @classdesc A generic class representing a metadata entity returned from a\n * reqeust to OCAPI. This can be an an object type, attribute group, attribute,\n * property, or value.\n */\nexport class MetadataNode extends TreeItem {\n  // Define member properties.\n  private _expandable: boolean;\n  private _nodeType: string;\n  public baseNodeName: string;\n  public objectAttributeDefinition: ObjectAttributeDefinition;\n  public objectAttributeGroup: ObjectAttributeGroup;\n  public objectAttributeValueDefinition: ObjectAttributeValueDefinition;\n  public objectTypeDefinition: ObjectTypeDefinition;\n  public parentContainer: string;\n  public parentId: string;\n  public stringList: string[];\n  public value: string | number;\n  public displayDescription: string;\n\n  /**\n   * @static\n   * @member {{definition: string, attribute: string, group: string}} nodeTypes -\n   *    An object literal mapping short names for node types to their SFCC\n   *    document types.\n   */\n  public static nodeTypes = {\n    parentContainer: 'parentContainer',\n    baseNodeName: 'baseNodeName',\n    definition: 'objectTypeDefinition',\n    attribute: 'objectAttributeDefinition',\n    attributeValue: 'objectAttributeValueDefinition',\n    group: 'objectAttributeGroup',\n    stringList: 'stringList',\n    value: 'value'\n  }\n\n  /**\n   * The constructor function that calls the super class constructor, and then\n   * initializes the custom logic for the MetaNode class.\n   *\n   * @param {string} name - The name of the node to be used as a label.\n   * @param {TreeItemCollapsibleState} collapsibleState - The collapsible state\n   *    constant: 'Collapsed', 'Expanded', & 'None'.\n   * @param {ObjectTypeDefinition | ObjectAttributeDefinition | ObjectAttributeGroup | string} value - The object type\n   *    definition instance, or an empty instance if this is only a parent\n   *    container.\n   * @constructor\n   */\n  constructor(\n    public readonly name: string,\n    public readonly collapsibleState: TreeItemCollapsibleState,\n    nodeData: INodeData\n  ) {\n    // Call the TreeNode constructor.\n    super(name, collapsibleState);\n    const instance = this;\n\n    // The types of tree nodes that have child nodes.\n    const expandableTypes = Object.keys(MetadataNode.nodeTypes)\n      .filter(nodeType => nodeType !== 'value');\n\n    // Loop through the nodeData Object properties to get the correct type.\n    // There will only be one property, since the node can only be one of the\n    // specified types.\n    Object.keys(nodeData)\n      .filter(attrName => attrName !== 'parentId' &&\n        attrName !== 'displayDescription')\n      .forEach(_dataType => {\n        instance[_dataType] = nodeData[_dataType];\n        const nodeTypeIndex = expandableTypes.findIndex(type => {\n          return MetadataNode.nodeTypes[type] === _dataType;\n        });\n        instance._nodeType = expandableTypes[nodeTypeIndex];\n        instance.contextValue = expandableTypes[nodeTypeIndex];\n      }\n    );\n\n    // Set the instance member properties for the child Class.\n    this._expandable = expandableTypes.indexOf(this._nodeType) > -1;\n    this.parentId = nodeData.parentId;\n    this.displayDescription = nodeData.displayDescription || '';\n  }\n\n  /* Member Mutators & Accessors\n     ======================================================================== */\n  /** @member {boolean} expandable - Boolean for if the node is expandable. */\n  get expandable(): boolean { return this._expandable; }\n  set expandable(value: boolean) { this._expandable = value; }\n\n  /** @member {string} nodeType - Readonly string for getting the node type. */\n  get nodeType(): string { return MetadataNode.nodeTypes[this._nodeType]; }\n\n  /** @member {string} tooltip - Readonly string for rendering a tooltip. */\n  get tooltip(): string { return this.name; }\n  get description(): string { return this.displayDescription || '' }\n}\n","/**\n * @file OCAPIService\n * @fileoverview - Provides a service for making calls to the Open Commerce API\n *    when exposed on a Sales Force Commerce Cloud sandbox instance.\n */\n\nimport { createReadStream } from 'fs';\nimport fetch from 'node-fetch';\nimport {\n  RelativePattern,\n  Uri,\n  window,\n  workspace,\n  WorkspaceFolder\n} from 'vscode';\nimport { apiConfig } from '../apiConfig';\nimport { OAuth2Token } from '../authorization/OAuth2Token';\nimport { HTTP_VERB, ICallSetup } from './ICallSetup';\nimport { IDWConfig } from './IDWConfig';\nimport { URLSearchParams } from 'url';\n\n/**\n * @class OCAPIService\n * Proivdes REST request methods for making calls to the SFCC Open Commerce API.\n */\nexport class OCAPIService {\n  public authToken: OAuth2Token = null;\n  private isGettingToken: boolean = false;\n  private dwConfig: IDWConfig = {\n    hostname: '',\n    ok: false,\n    password: '',\n    username: ''\n  };\n\n  /**\n   * Returns an object literal that conforms to the ICallSetup interface so that\n   * it can be passed directly to the makeCall() method of this class.\n   * @public\n   * @param {string} resourceName - The name of the OCAPI Data API resource to query.\n   * @param {string} callName - The name of the SFCC OCAPI call to make. The name is\n   *    in the format that is used in the URI to identify which asset we are\n   *    requesting form the server.\n   * @param {Object} [callData] - An object of key/value pairs to be extracted into the\n   *    URL parameters, headers, and body of the OCAPI request.\n   * @returns An object conforming to the ICallSetup interface with the data\n   *    for making the call to the API endpoint, or an appropriate error\n   *    message.\n   */\n  public async getCallSetup(\n    resourceName: string,\n    callName: string,\n    callData?: any\n  ): Promise<ICallSetup> {\n    // Setup default values where appropriate.\n    const setupResult: ICallSetup = {\n      body: {},\n      callName: '',\n      endpoint: '',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      method: HTTP_VERB.get,\n      setupErrMsg: '',\n      setupError: false\n    };\n\n    let resConfig;\n    let callConfig;\n\n    // Check that calls to the specified resource have been configured in the\n    // apiConig.ts configuration file.\n    if (apiConfig.resources.hasOwnProperty(resourceName)) {\n      resConfig = apiConfig.resources[resourceName];\n    } else {\n      setupResult.setupError = true;\n      setupResult.setupErrMsg +=\n        '\\nNo setup found in apiConfig for resource: ' + resourceName;\n    }\n\n    // If an API is specified, then append it to the endpoint.\n    if (resConfig && resConfig.api) {\n      setupResult.endpoint += '/s/-/dw/' + resConfig.api + '/';\n    } else {\n      setupResult.setupError = true;\n      setupResult.setupErrMsg +=\n        '\\nNo API version was specified in the apiConfig object';\n    }\n\n    if (apiConfig.hasOwnProperty('version')) {\n      setupResult.endpoint += apiConfig.version + '/';\n    } else {\n      setupResult.setupError = true;\n      setupResult.setupErrMsg +=\n        '\\nNo API version is specified in the apiConfig';\n    }\n\n    // Check if the call name is configured for the specified resource.\n    if (\n      resConfig &&\n      resConfig.availableCalls &&\n      resConfig.availableCalls.hasOwnProperty(callName)\n    ) {\n      setupResult.callName = callName;\n      callConfig = resConfig.availableCalls[callName];\n    } else {\n      setupResult.setupError = true;\n      setupResult.setupErrMsg +=\n        '\\nNo matching method call found for: ' +\n        callName +\n        '\\nResource: ' +\n        resourceName;\n    }\n\n    // Add the path to the endpoint.\n    if (callConfig && callConfig.path) {\n      setupResult.endpoint += callConfig.path;\n    } else {\n      setupResult.setupError = true;\n      setupResult.setupErrMsg += '\\nMissing call path in the apiConfig:';\n      setupResult.setupErrMsg += '\\n- OCAPI resource: ' + resourceName;\n      setupResult.setupErrMsg += '\\n- Call type: ' + callName;\n    }\n\n    // If headers are specified, then replace the default with the specified.\n    if (callConfig && callConfig.headers) {\n      setupResult.headers = callConfig.headers;\n    }\n\n    if (callConfig && callConfig.method) {\n      setupResult.method = callConfig.method;\n    }\n\n    // Check that any required parameters are included in the callData.\n    if (callConfig && callConfig.params && callConfig.params.length) {\n      const usedParams = [];\n\n      // If an explicit body was included, then append it to the seutp object.\n      if ('body' in callData) {\n        if (typeof callData.body === 'string') {\n          setupResult.body = encodeURIComponent(setupResult.body);\n        }\n        setupResult.body = callData.body;\n        usedParams.push('body');\n      }\n\n      callConfig.params.forEach(param => {\n        const replaceMe = '{' + param.id + '}';\n        if (\n          callData[param.id] &&\n          typeof callData[param.id] === param.type &&\n          typeof param.use === 'string' &&\n          usedParams.indexOf(param.id) === -1\n        ) {\n          // Determine where the parameter needs to be included in the\n          // call and add it to the call setup object.\n          if (\n            param.use === 'PATH_PARAMETER' &&\n            setupResult.endpoint.indexOf(replaceMe) > -1\n          ) {\n            setupResult.endpoint = setupResult.endpoint.replace(\n              replaceMe,\n              callData[param.id]\n            );\n          } else if (param.use === 'QUERY_PARAMETER') {\n            // Check if this is the first query string parameter, or an\n            // additional parameter being added to the list.\n            setupResult.endpoint +=\n              setupResult.endpoint.indexOf('?') > -1 ? '&' : '?';\n            // Append to the URL as a query string type parameter.\n            setupResult.endpoint +=\n              encodeURIComponent(param.id) +\n              '=' +\n              encodeURIComponent(callData[param.id]);\n          } else {\n            // If the request supports a call body, then any parameter data\n            // that is not specified as a parameter in the config will be\n            // added to the body of the request.\n            setupResult.body[param.id] = callData[param.id];\n          }\n\n          // Mark this parameter as used.\n          usedParams.push(param.id);\n        } else {\n          setupResult.setupError = true;\n          setupResult.setupErrMsg += '\\nMissing call parameter: ' + param;\n          setupResult.setupErrMsg += '\\n- Resource: ' + resourceName;\n          setupResult.setupErrMsg += '\\n- Call type: ' + callName;\n        }\n      });\n\n      // Remove any already added data properties.\n      const dataKeys = Object.keys(callData).filter(k =>\n          usedParams.indexOf(k) === -1);\n\n      if (dataKeys.length) {\n        // Loop through any keys that are not in the API config and add them to\n        // the request in either the URI or the Body of the request, based on the\n        // HTTP method used.\n        dataKeys.forEach(function (optionalParam) {\n          // Add any remaining parameters to the request.\n          if (setupResult.method === HTTP_VERB.get) {\n            setupResult.endpoint +=\n            setupResult.endpoint.indexOf('?') > -1 ? '&' : '?';\n            setupResult.endpoint +=\n              encodeURIComponent(optionalParam) +\n              '=' +\n              encodeURIComponent(callData[optionalParam]);\n          } else {\n            setupResult.body[optionalParam] = callData[optionalParam];\n          }\n        });\n      }\n    }\n\n    // If the call setup was complete, then get the sandbox configuration.\n    if (!setupResult.setupError) {\n      // Get the sandbox configuration.\n      this.dwConfig = await this.getDWConfig();\n      if (!this.dwConfig.ok) {\n        setupResult.setupError = true;\n      } else {\n        // Concatenate the sandbox URL with the call endpoint to get the\n        // complete endpoint URI.\n        setupResult.endpoint =\n          'https://' + this.dwConfig.hostname + setupResult.endpoint;\n\n        // Check if there needs to be an OAuth2 token included with the request.\n        if (callConfig && typeof callConfig.authorization === 'string') {\n          const token = await this.getOAuth2Token(callConfig.authorization);\n          setupResult.headers['Authorization'] =\n            token.tokenType + ' ' + token.accessToken;\n        }\n      }\n    } else {\n      console.error('ERROR in setupResult', setupResult);\n    }\n\n    return setupResult;\n  }\n\n  /**\n   * Gets an OAuth 2.0 token wich is then included in the authorization header\n   * for subsequent calls to the OCAPI Shop or Data APIs. The grant is requested\n   * from either the Digital Application Server for a BM user grant type, or\n   * from the Digital Authorization Server for a client credentials grant type.\n   *\n   * @param {string} tokenType - The type of token that is needed for the API\n   *    call to be made. This should either be 'BM_USER' for a Business Manager\n   *    User type of token, or 'CLIENT_CREDENTIALS' for a Client Credentials\n   *    type of token. See the OCAPI documentation for more information about\n   *    token types.\n   */\n  public async getOAuth2Token(tokenType: string): Promise<OAuth2Token> {\n    // Get the sandbox configuration.\n    this.dwConfig = await this.getDWConfig();\n    if (!this.dwConfig.ok) {\n      console.error('DW config is no bueno...');\n      return Promise.reject(\n        'There was an error parsing the dw.json config file'\n      );\n    } else if (\n      tokenType === 'BM_USER' &&\n      apiConfig.hasOwnProperty('clientId')\n    ) {\n      this.isGettingToken = true;\n\n      // Concatenate the pieces of the URL.\n      let url =\n        'https://' +\n        this.dwConfig.hostname +\n        '/dw/oauth2/access_token?client_id=' +\n        apiConfig.clientId;\n\n      // Encode credentials to base64\n      const encodedString = Buffer.from(\n        this.dwConfig.username +\n          ':' +\n          this.dwConfig.password +\n          ':' +\n          apiConfig.clientPassword\n      ).toString('base64');\n      const authString = 'Basic ' + encodedString;\n      const bodyParams = new URLSearchParams();\n      bodyParams.append(\n        'grant_type',\n        'urn:demandware:params:oauth:grant-type:client-id:dwsid:dwsecuretoken'\n      );\n\n      const result: Promise<OAuth2Token> = new Promise((resolve, reject) => {\n        fetch(url, {\n          body: bodyParams,\n          headers: {\n            Authorization: authString,\n            'Content-Type': 'application/x-www-form-urlencoded'\n          },\n          method: 'POST'\n        })\n          .then(resp => {\n            if (resp.ok) {\n              return resp.json();\n            } else {\n              reject(\n                'Could not retrieve Auth Token from Digital Application Server'\n              );\n            }\n          })\n          .then(resp => {\n            this.authToken = new OAuth2Token(resp);\n            resolve(this.authToken);\n          })\n          .catch(e => {\n            reject(e);\n          });\n      });\n\n      return result;\n    } else if (tokenType === 'CLIENT_CREDENTIALS') {\n      /** @todo: implement getOAuth2Token for auth server authentication */\n    }\n  }\n\n  /**\n   * Makes a call to the SFCC Open Commerce API using node-fetch.\n   * @param {ICallSetup} callSetup - The OCAPI call setup object that implements\n   *    the interface ICallSetup.\n   * @return {Promise<any>} - Returns a promise that resolves to the returned &\n   *    formatted data from the API call or an error message if there was an\n   *    exception durring the execution of the API call.\n   */\n  public async makeCall(callSetup: ICallSetup): Promise<any> {\n    let params;\n    if (callSetup.body && Object.keys(callSetup.body).length > 0) {\n      params = {\n        headers: callSetup.headers,\n        method: callSetup.method,\n        body: callSetup.body\n      };\n    } else {\n      params = {\n        headers: callSetup.headers,\n        method: callSetup.method\n      };\n    }\n\n    return await fetch(callSetup.endpoint, params)\n      .then(resp => {\n        if (resp.ok && resp.statusText.toLowerCase() === 'no content') {\n          return {};\n        } else if (resp.ok) {\n          return resp.json();\n        } else {\n          const errMsg = resp.statusText + ' :: Code ' + resp.status;\n          window.showErrorMessage('ERROR in OCAPI call: ' + errMsg);\n          return { error: true, errorMessage: errMsg };\n        }\n      })\n      .catch(err => {\n        const errMsg = 'There was an error making the Open Commerce' +\n        ' API call: ' + err.name + '\\n' + 'Message: ' + err.message\n        window.showErrorMessage('ERROR in OCAPI call: ' + errMsg);\n        return { error: true, errorMessage: errMsg };\n      });\n  }\n\n  /**\n   * Gets the sandbox connection configuration from a dw.json configuration file\n   * in one of the workspace folders.\n   *\n   * @private\n   * @return {IDWConfig} - Returns a Promise that resolves to a an\n   *    object literal that conforms to the IDWConfig interface definition.\n   * @author github: sqrtt\n   *    This is a helper function that was borrowed from the Prophet debugger\n   *    extension for debugging and development of SFCC code.\n   */\n  private async getDWConfig(): Promise<IDWConfig> {\n    // Check if the configuration has already been loaded.\n    if (\n      this.dwConfig.hostname &&\n      this.dwConfig.username &&\n      this.dwConfig.password &&\n      this.dwConfig.ok\n    ) {\n      return await Promise.resolve(this.dwConfig);\n    } else {\n      // Setup the default response.\n      let result: IDWConfig = {\n        hostname: '',\n        ok: false,\n        password: '',\n        username: ''\n      };\n\n      // Check all of the folders in the current workspace for the existance of\n      // one or more dw.json files.\n      const workspaceFolders: WorkspaceFolder[] =\n        workspace.workspaceFolders || [];\n      const dwConfigFiles = await Promise.all(\n        workspaceFolders.map(wf =>\n          workspace.findFiles(\n            new RelativePattern(wf, '**/dw.json'),\n            new RelativePattern(\n              wf,\n              '{node_modules,.git,RemoteSystemsTempFiles}'\n            )\n          )\n        )\n      );\n\n      let configFiles: Uri[] = [];\n      dwConfigFiles.forEach(uriSubArray => {\n        configFiles = configFiles.concat(uriSubArray);\n      });\n\n      // Get rid of any paths that return undefined or null when evaluated.\n      configFiles = configFiles.filter(Boolean);\n\n      // 1 dw.json file found\n      if (configFiles.length === 1 && configFiles[0].fsPath) {\n        result = await this.readConfigFromFile(configFiles[0].fsPath);\n\n        // > 1 dw.json file found\n      } else if (configFiles.length > 1) {\n        const dwConfig = await window.showQuickPick(\n          configFiles.map(config => config.fsPath),\n          { placeHolder: 'Select configuration' }\n        );\n        result = await this.readConfigFromFile(dwConfig);\n      }\n\n      return result;\n    }\n  }\n\n  /**\n   * Reads the SFCC sandbox configuration from a dw.json configuration file and\n   * an object that conforms to the IDWConfig interface with key/value pairs for\n   * the needed sandbox configuration fields.\n   *\n   * @param {string} filePath - The file path for the dwconfig.json file to be read.\n   * @return {Promise<IDWConfig>} - Returns a promise that resolves with the\n   *    configuration object read from the selected dw.json file.\n   */\n  private readConfigFromFile(filePath: string): Promise<IDWConfig> {\n    return new Promise((resolve, reject) => {\n      // Create a stream to read the data from the file.\n      const chunks: Buffer[] = [];\n      const readStream = createReadStream(filePath);\n\n      readStream.on('data', chunk => {\n        chunks.push(chunk);\n      });\n\n      readStream.on('error', e => {\n        reject(e);\n      });\n\n      readStream.on('close', () => {\n        try {\n          const conf = JSON.parse(Buffer.concat(chunks).toString());\n          conf.configFilename = filePath;\n          conf.ok = true;\n          resolve(conf);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    });\n  }\n}\n","module.exports = require(\"fs\");","import Stream from 'stream';\nimport http from 'http';\nimport Url from 'url';\nimport https from 'https';\nimport zlib from 'zlib';\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n// (MIT licensed)\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (typeof body === 'string') ; else if (isURLSearchParams(body)) ; else if (body instanceof Blob) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') ; else if (ArrayBuffer.isView(body)) ; else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string\n\t\tbody = String(body);\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\t// body is null\n\tif (this.body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is string\n\tif (typeof this.body === 'string') {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body));\n\t}\n\n\t// body is blob\n\tif (this.body instanceof Blob) {\n\t\treturn Body.Promise.resolve(this.body[BUFFER]);\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(this.body)) {\n\t\treturn Body.Promise.resolve(this.body);\n\t}\n\n\t// body is ArrayBuffer\n\tif (Object.prototype.toString.call(this.body) === '[object ArrayBuffer]') {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body));\n\t}\n\n\t// body is ArrayBufferView\n\tif (ArrayBuffer.isView(this.body)) {\n\t\treturn Body.Promise.resolve(Buffer.from(this.body.buffer, this.body.byteOffset, this.body.byteLength));\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(this.body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\t_this4.body.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\t_this4.body.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\t_this4.body.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Response or Request instance\n */\nfunction extractContentType(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: Currently, because of a guard in Request, body\n\t// can never be null. Included here for completeness.\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\t// istanbul ignore if: included for completion\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn Buffer.byteLength(body);\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is URLSearchParams\n\t\treturn Buffer.byteLength(String(body));\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn body.byteLength;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn body.byteLength;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is URLSearchParams\n\t\tdest.write(Buffer.from(String(body)));\n\t\tdest.end();\n\t} else if (body instanceof Blob) {\n\t\t// body is blob\n\t\tdest.write(body[BUFFER]);\n\t\tdest.end();\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tdest.write(Buffer.from(body));\n\t\tdest.end();\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tdest.write(Buffer.from(body.buffer, body.byteOffset, body.byteLength));\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name)) {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders: new Headers(opts.headers)\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url;\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (init.body != null) {\n\t\t\tconst contentType = extractContentType(this);\n\t\t\tif (contentType !== null && !headers.has('Content-Type')) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tif (!headers.has('Connection') && !request.agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent: request.agent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nexport default fetch;\nexport { Headers, Request, Response, FetchError };\n","module.exports = require(\"stream\");","module.exports = require(\"http\");","module.exports = require(\"url\");","module.exports = require(\"https\");","module.exports = require(\"zlib\");","/**\n * @file apiConfig.ts\n * @fileoverview - Exports an object literal with configuration information for\n *    the available OCAPI calls.\n */\n\nexport const apiConfig = {\n  clientId: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n  clientPassword: 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n  resources: {\n\n    /***************************************************************************\n     * OCAPI : Data API\n     * Resource : CustomObjectDefinitions\n     **************************************************************************/\n    customObjectDefinitions: {\n      api: 'data',\n      availableCalls: {\n        /* ==================================================================\n         * GET ALL CUSTOM OBJECT DEFINITIONS\n         * ================================================================== */\n        getAll: {\n          authorization: 'BM_USER',\n          headers: { 'Content-Type': 'application/json' },\n          method: 'GET',\n          params: [\n            {\n              id: 'select',\n              type: 'string',\n              use: 'QUERY_PARAMETER'\n            }, {\n              id: 'count',\n              type: 'number',\n              use: 'QUERY_PARAMETER'\n            }\n          ],\n          // Use the system_object_definition endpoint with the filter to only\n          // get the custom object tyeps.\n          path: 'system_object_definitions',\n        },\n\n        /* ==================================================================\n         * GET A CUSTOM OBJECT DEFINITION & ATTRIBUTES\n         * ================================================================== */\n        get: {\n          authorization: 'BM_USER',\n          headers: { 'Content-Type': 'application/json' },\n          method: 'GET',\n          params: [\n            {\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n          ],\n          path: '/custom_object_definitions/{objectType}/attribute_definitions',\n        },\n\n        /* ==================================================================\n         * GET CUSTOM OBJECT ATTRIBUTES\n         * ================================================================== */\n        getAttributes: {\n          authorization: 'BM_USER',\n          headers: { 'Content-Type': 'application/json' },\n          method: 'GET',\n          params: [\n            {\n              id: 'select',\n              type: 'string',\n              use: 'QUERY_PARAMETER'\n            },{\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n          ],\n          path: 'custom_object_definitions/{objectType}/attribute_definitions'\n        }\n      }\n    },\n\n\n    /***************************************************************************\n     * OCAPI : Data API\n     * Resource : SystemObjectDefinitions\n     **************************************************************************/\n    systemObjectDefinitions: {\n      api: 'data',\n      availableCalls: {\n        /* ==================================================================\n         * GET SYSTEM OBJECT DEFINITION & ATTRIBUTES\n         * ================================================================== */\n        get: {\n          authorization: 'BM_USER',\n          headers: { 'Content-Type': 'application/json' },\n          method: 'GET',\n          params: [\n            {\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n          ],\n          path: 'system_object_definitions/{objectType}'\n        },\n\n        /* ==================================================================\n         * GET ALL SYSTEM OBJECT DEFINITIONS\n         * ================================================================== */\n        getAll: {\n          authorization: 'BM_USER',\n          headers: { 'Content-Type': 'application/json' },\n          method: 'GET',\n          params: [\n            {\n              id: 'select',\n              type: 'string',\n              use: 'QUERY_PARAMETER'\n            }, {\n              id: 'count',\n              type: 'number',\n              use: 'QUERY_PARAMETER'\n            }\n          ],\n          path: 'system_object_definitions',\n        },\n\n        /* ==================================================================\n         * GET SYSTEM OBJECT ATTRIBUTES\n         * ================================================================== */\n        getAttributes: {\n          authorization: 'BM_USER',\n          headers: { 'Content-Type': 'application/json' },\n          method: 'GET',\n          params: [\n            {\n              id: 'select',\n              type: 'string',\n              use: 'QUERY_PARAMETER'\n            },{\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n          ],\n          path: 'system_object_definitions/{objectType}/attribute_definitions'\n        },\n\n        /* ==================================================================\n         * CREATE NEW ATTRIBUTE DEFINITION\n         * ================================================================== */\n        createAttribute: {\n          authorization: 'BM_USER',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-dw-validate-existing': true,\n            'Accept': 'application/json'\n          },\n          method: 'PUT',\n          params: [\n            {\n              id: 'id',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            },{\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n\n          ],\n          path: 'system_object_definitions/{objectType}/attribute_definitions/{id}'\n        },\n\n        /* ==================================================================\n         * DELETE ATTRIBUTE DEFINITION\n         * ================================================================== */\n        deleteAttribute: {\n          authorization: 'BM_USER',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-dw-validate-existing': true,\n            'Accept': 'application/json'\n          },\n          method: 'DELETE',\n          params: [\n            {\n              id: 'id',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            },{\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n\n          ],\n          path: 'system_object_definitions/{objectType}/attribute_definitions/{id}'\n        },\n\n        /* ==================================================================\n         * CREATE ATTRIBUTE GROUP\n         * ================================================================== */\n        createAttributeGroup: {\n          authorization: 'BM_USER',\n          headers: {\n            'Content-Type': 'application/json',\n            'x-dw-validate-existing': true,\n            'Accept': 'application/json'\n          },\n          method: 'PUT',\n          params: [\n            {\n              id: 'id',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            },{\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n\n          ],\n          path: 'system_object_definitions/{objectType}/attribute_groups/{id}'\n        },\n\n        /* ==================================================================\n         * GET ATTRIBUTE GROUPS\n         * ================================================================== */\n        getAttributeGroups: {\n          authorization: 'BM_USER',\n          headers: { 'Content-Type': 'application/json' },\n          method: 'GET',\n          params: [\n            {\n              id: 'select',\n              type: 'string',\n              use: 'QUERY_PARAMETER'\n            },{\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n          ],\n          path: 'system_object_definitions/{objectType}/attribute_groups'\n        },\n\n        /* ==================================================================\n         * ADD ATTRIBUTE DEFINITION TO ATTRIBUTE GROUP\n         * ================================================================== */\n        assignAttributeToGroup: {\n          authorization: 'BM_USER',\n          headers: { 'Content-Type': 'application/json' },\n          method: 'PUT',\n          params: [\n            {\n              id: 'objectType',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }, {\n              id: 'groupId',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }, {\n              id: 'attributeId',\n              type: 'string',\n              use: 'PATH_PARAMETER'\n            }\n          ],\n          path: 'system_object_definitions/{objectType}/attribute_groups/{groupId}/attribute_definitions/{attributeId}'\n        }\n      }\n    }\n  },\n\n  /*\n   * -- Target API Version ---\n   * This should be the same as the version number for wich the client ID access\n   * assigned in your sandboxes OCAPI Configuration and should be in the same\n   * format as it is in an OCAPI URL (i.e.: v18_8).\n   */\n  version: 'v18_8'\n};\n","/**\n * @file OAuth2Token.ts\n * @fileoverview - A class to hold an OAuth 2.0 access token.\n */\n\nexport class OAuth2Token {\n  // Define class members and their default values.\n  public expiresIn: number = 0;\n  public tokenType: string = '';\n  public accessToken: string = '';\n  public timeCreated: number = 0;\n\n  constructor(args) {\n    // Assign any instance values passed in at instantiation.\n    if (args.expires_in) {\n      this.expiresIn = args.expires_in;\n    }\n    if (args.token_type) {\n      this.tokenType = args.token_type;\n    }\n    if (args.access_token) {\n      this.accessToken = args.access_token;\n    }\n\n    this.timeCreated = Date.now();\n  }\n\n  public isValid(): boolean {\n    const timeNow = Date.now();\n    if (timeNow - this.timeCreated > this.expiresIn * 1000) {\n      return false;\n    }\n    return true;\n  }\n}\n","/**\n * @file ICallSetup.ts\n * @fileoverview - An interface that describes the arguments needed for the\n * constructor method of the CallSetup class.\n */\n\nexport enum HTTP_VERB {\n  delete = 'DELETE',\n  get = 'GET',\n  patch = 'PATCH',\n  post = 'POST',\n  put = 'PUT'\n}\n\n/**\n * @interface ICallSetup - Describes the arguments needed for making a call to\n * the OCAPIService class. This is also what is returned from the callSetup()\n * method of the OCAPIService class.\n */\nexport interface ICallSetup {\n  body?: any;\n  callName?: string;\n  endpoint: string;\n  headers: {\n    'Content-Type': string,\n    [propName: string]: string;\n  };\n  method: HTTP_VERB;\n  setupError?: boolean;\n  setupErrMsg?: string;\n}\n","/**\n * @file ObjectTypeDefinition.ts\n * @fileoverview - Provides a class for standardized handling of the OCAPI\n * object_type_definition document type.\n */\n\n/**\n * @class ObjectTypeDefinition\n * @classdesc - Provides a data class for working with the OCAPI Data API\n *    document type object_type_definition.\n */\nexport default class ObjectTypeDefinition {\n  // Declare class member variable defaults.\n  public attributeDefinitionCount: number = 0;\n  public attributeGroupCount: number = 0;\n  public contentObject: boolean = false;\n  public description: string = '';\n  public displayName: string = '';\n  public link: string = '';\n  public objectType: string = '';\n  public queryable: boolean = true;\n  public readOnly: boolean = false;\n\n  /**\n   * @constructor\n   * @param {object} [args] - A system_object_definition document returned from\n   *    a call to the Open Commerce API.\n   * @param {number} [args.attribute_definition_count] - The number of attribute\n   *    definitions contained by the type. This is a computed attribute and\n   *    cannot be changed.\n   * @param {number} [args.attribute_group_count] - The number of attribute\n   *    groups contained by the type. This is a computed attribute and cannot be\n   *    changed.\n   * @param {boolean} [args.content_object] - True if the object type definition\n   *    is marked as a content object\n   * @param {string} [args.description] - The user entered description for the\n   *    type (localizable)\n   * @param {string} [args.display_name] - The user entered display name\n   *    (localizable).\n   * @param {string} [args.link] - URL that is used to get this instance. This\n   *    is a computed attribute and cannot be changed.\n   * @param {string} [args.object_type] - The object type identifier.\n   * @param {boolean} [args.queryable] - True if the system object type is\n   *    queryable, false otherwise. Default is true.\n   * @param {boolean} [args.read_only] - True if the system object is read-only,\n   *    false otherwise. This is a computed attribute and cannot be changed.\n   */\n  constructor(args) {\n    // Get any passed in property values and assign them to the class instance.\n    if (args) {\n      if (args.attribute_definition_count) {\n        this.attributeDefinitionCount = args.attribute_definition_count;\n      }\n      if (args.attribute_group_count) {\n        this.attributeGroupCount = args.attribute_group_count;\n      }\n      if (args.content_object) { this.contentObject = args.content_object }\n      if (args.description) { this.description = args.description }\n      if (args.display_name) { this.displayName = args.display_name }\n      if (args.link) { this.link = args.link }\n      if (args.object_type) { this.objectType = args.object_type }\n      if (args.queryable) { this.queryable = args.queryable }\n      if (args.read_only) { this.readOnly = args.read_only }\n    }\n  }\n}\n","/**\n * @file ObjectAttributeDefinition.ts\n * @fileoverview - Exports the ObjectAttributeDefinition class which is a model\n * for the OCAPI document representing an attribute definition of a system or\n * custom object.\n */\n\nimport IAPIDocument from '../interfaces/IAPIDocument';\nimport { IOCAPITypes } from '../interfaces/IOCAPITypes';\nimport ObjectAttributeValueDefinition from './ObjectAttributeValueDefinition';\n\n/**\n * @class - Used for handling the OCAPI document: ObjectAttributeDefinition.\n * @param {Object} args - The raw JSON object document returned from a call to\n *      SFCC OCAPI.\n */\nexport default class ObjectAttributeDefinition implements IAPIDocument {\n  // Declare public class members.\n  public defaultValue: ObjectAttributeValueDefinition;\n  public description: IOCAPITypes.ILocalizedString;\n  public displayName: IOCAPITypes.ILocalizedString;\n  public effectiveId: string;\n  public externallyDefined: boolean;\n  public externallyManaged: boolean;\n  public id: string;\n  public key: boolean;\n  public link: string;\n  public localizable: boolean;\n  public mandatory: boolean;\n  public maxValue?: number;\n  public minLength: number;\n  public minValue?: number;\n  public multiValueType: boolean;\n  public orderRequired: boolean;\n  public queryable: boolean;\n  public readOnly: boolean;\n  public regularExpression: string;\n  public requiresEncoding: boolean;\n  public scale: number;\n  public searchable: boolean;\n  public setValueType: boolean;\n  public siteSpecific: boolean;\n  public system: boolean;\n  public unit: IOCAPITypes.ILocalizedString;\n  public valueDefinitions: ObjectAttributeValueDefinition[];\n  public valueType: string;\n  public visible: boolean;\n\n  // A list of field Ids that can be set to include only properties that need\n  // to be set when sending the document definition in an API call.\n  public includedFields: string[];\n\n  // members that need to be renamed when sending the doc.\n  public readonly MEMBER_MAP = {\n    defaultValue: 'default_value',\n    displayName: 'display_name',\n    effectiveId: 'effective_id',\n    externallyDefined: 'externally_defined',\n    externallyManaged: 'externally_managed',\n    fieldHeight: 'field_height',\n    fieldWidth: 'field_width',\n    maxValue: 'max_value',\n    minLength: 'min_length',\n    minValue: 'min_value',\n    multiValueType: 'multi_value_type',\n    orderRequired: 'order_required',\n    readOnly: 'read_only',\n    regularExpression: 'regular_expression',\n    requiresEncoding: 'requires_encoding',\n    setValueType: 'set_value_type',\n    siteSpecific: 'site_specific',\n    valueDefinitions: 'value_definitions',\n    valueType: 'value_type'\n  };\n\n  /**\n   * @constructor\n   * @param {Object} args - The raw JSON response object:\n   *    object_attribute_value_definition.\n   *\n   * Notes:\n   *  - Number values that default to -1 do so because they are integers. The -1\n   *    value indicates that they have not been set.\n   *  - The values for field_height and field_width are ignored only kept for\n   *    use in the import and export files.\n   */\n  constructor(args) {\n    this.defaultValue =\n      new ObjectAttributeValueDefinition(args.default_value) ||\n      new ObjectAttributeValueDefinition({});\n    this.description = args.description || { default: '' };\n    this.displayName = args.display_name || { default: '' };\n    this.effectiveId = args.effective_id || '';\n    this.externallyDefined = args.externally_defined || false;\n    this.externallyManaged = args.externally_managed || false;\n    this.id = args.id || '';\n    this.key = args.key || false;\n    this.link = args.link || '';\n    this.localizable = args.localizable || false;\n    this.mandatory = args.mandatory || false;\n    this.maxValue = args.max_value || null;\n    this.minLength = args.min_length || 0;\n    this.minValue = args.min_value || null;\n    this.multiValueType = args.multi_value_type || false;\n    this.orderRequired = args.order_required || false;\n    this.queryable = args.queryable || false;\n    this.readOnly = args.read_only || false;\n    this.regularExpression = args.regular_expression || '';\n    this.requiresEncoding = args.requires_encoding || false;\n    this.scale = args.scale || -1;\n    this.searchable = args.searchable || false;\n    this.setValueType = args.set_value_type || '';\n    this.siteSpecific = args.site_specific || false;\n    this.system = args.system || false;\n    this.unit = args.unit || { default: '' };\n    this.valueDefinitions = args.value_definitions || [];\n    this.valueType = args.value_type || '';\n    this.visible = args.visible || false;\n    this.includedFields = args.includeFields || [];\n  }\n\n  /**\n   * Gets a JSON string representation in the form of the OCAPI document.\n   *\n   * @param {string[]} [includeFields = []] - An optional argument to specify which\n   *    class properties to include in the JSON string result. If empty, all of\n   *    the class properties will be included. This is not ideal when updating\n   *    because it will overwrite values for attribute properties that were\n   *    previously set with the class defaults. In this case, specify only the\n   *    fields that you are updating.\n   * @return {string} - Returns a stringified JSON object representation of the\n   *    OCAPI document class that can be submitted to the API methods.\n   */\n  public getDocument(includeFields: string[] = []): Object {\n    const documentObj = {};\n    let memberNames = Object.keys(this).filter(\n      key =>\n        typeof key !== 'function' &&\n        key !== 'MEMBER_MAP' &&\n        key !== 'includedFields'\n    );\n\n    // If the fields to return were specified, then filter the array of\n    // properties to assign to the new object literal.\n    if (includeFields && includeFields.length) {\n      memberNames = memberNames.filter(\n        name => includeFields.indexOf(name) > -1\n      );\n    } else if (this.includedFields.length) {\n      memberNames = memberNames.filter(\n        name => this.includedFields.indexOf(name) > -1\n      );\n    }\n\n    // Create a property on the results object.\n    memberNames.forEach(localPropName => {\n      const docPropName: string = localPropName in this.MEMBER_MAP ?\n        this.MEMBER_MAP[localPropName] : localPropName;\n      let localPropVal: any;\n\n      if (typeof this[localPropName] !== 'undefined') {\n        localPropVal = this[localPropName];\n        const isComplexType =\n          typeof localPropVal !== 'number' &&\n          typeof localPropVal !== 'string' &&\n          typeof localPropVal !== 'boolean';\n\n        if (!isComplexType) {\n          documentObj[docPropName] = localPropVal;\n        } else {\n          if (localPropVal instanceof ObjectAttributeValueDefinition) {\n            // ==> ObjectAttributeValueDefinition - this.defaultValue\n            documentObj[docPropName] = localPropVal.getDocument();\n          } else if (Array.isArray(localPropVal)) {\n            // ==> Array<ObjectAttributeValueDefinition> - this.valueDefinitions\n            documentObj[docPropName] = localPropVal.length\n              ? localPropVal.map(arrayMember => {\n                  // valueDefinitions is the only instance property that is an\n                  // Array type.\n                  if (arrayMember instanceof ObjectAttributeValueDefinition) {\n                    return arrayMember.getDocument();\n                  }\n                })\n              : [];\n          } else {\n            // ==> IOCAPITypes.ILocalizedString - this.description,\n            // this.displayName, & this.unit\n            documentObj[docPropName] = localPropVal;\n          }\n        }\n      }\n    });\n\n    return documentObj;\n  }\n}\n","/**\n * @file ObjectAttributeValueDefinition.ts\n * @fileoverview - Exports a single data-model class that takes an OCAPI\n * ObectAttributeValueDefinition document result in the constructor and provides\n * a class with cammel-case named variables for use in the data provider class.\n */\n\nimport { IOCAPITypes } from '../interfaces/IOCAPITypes';\n\n/**\n * @class ObjectAttributeValueDefinition\n * @classdesc - A data class for the OCAPI data API document type:\n *    - ObjectAttributeValueDefinition\n */\nexport default class ObjectAttributeValueDefinition {\n  // Declare class member variables.\n  public description: IOCAPITypes.ILocalizedString;\n  public displayValue: IOCAPITypes.ILocalizedString;\n  public id: string;\n  public position: number;\n  public value: Object;\n\n  /**\n   * A constructor function for initializing new instances of the class.\n   * @param {Object} [args] - The raw JSON document object returned from a call\n   *    to the Open Commerce API of type object_attribute_value_definition.\n   * @constructor\n   */\n  constructor(args) {\n    if (args) {\n      this.description = args.description || { default: '' };\n      this.displayValue = args.display_value || { default: '' };\n      this.id = args.id || '';\n      this.position = args.position || -1;\n      this.value = args.value || {};\n    }\n  }\n\n  /**\n   * Gets a JSON string representation in the form of the OCAPI document.\n   *\n   * @param {string[]} [includeFields = []] - An optional argument to specify which\n   *    class properties to include in the JSON string result. If empty, all of\n   *    the class properties will be included. This is not ideal when updating\n   *    because it will overwrite values for attribute properties that were\n   *    previously set with the class defaults. In this case, specify only the\n   *    fields that you are updating.\n   * @return {Object} - Returns a JSON object representation of the OCAPI\n   *    document class that can be submitted to the API methods.\n   */\n  public getDocument(includeFields: string[] = []): Object {\n    let result = {};\n\n    return result;\n  }\n}\n","/**\n * @file ObjectAttributeGroup.ts\n * @fileoverview - Exports the ObjectAttributeGroup class which is a model for the OCAPI\n * document representing an attribute group of a system or custom object.\n */\n\nimport IAPIDocument from '../interfaces/IAPIDocument';\nimport ObjectAttributeDefinition from './ObjectAttributeDefinition';\n\n/**\n * @class\n * @classdesc - Used for handling the OCAPI document: ObjectAttributeGroup.\n */\nexport default class ObjectAttributeGroup implements IAPIDocument {\n  // Class Member Fields\n  public attributeDefinitions: ObjectAttributeDefinition[] = [];\n  public attributeDefinitionsCount: number = 0;\n  public description: string = '';\n  public displayName: string = '';\n  public id: string = '';\n  public internal: boolean = false;\n  public link: string = '';\n  public position: number = 0;\n  public includedFields: string[] = [];\n\n  public readonly MEMBER_MAP = {\n    attributeDefinitions: 'attribute_definitions',\n    attributeDefinitionsCount: 'attribute_definitions_count',\n    displayName: 'display_name'\n  };\n\n  /**\n   * @param {Object} args - The raw JSON object document returned from a call to\n   *    SFCC OCAPI.\n   * @constructor\n   */\n  constructor(args) {\n    if (args) {\n      if (args.attribute_definitions) {\n        this.attributeDefinitions = args.attribute_definitions.map(def =>\n            new ObjectAttributeDefinition(def));\n      }\n      if (args.attribute_definitions_count) {\n        this.attributeDefinitionsCount = args.attribute_definitions_count;\n      }\n      if (args.description && args.description.default) {\n        this.description = args.description.default;\n      }\n      if (args.display_name && args.display_name.default) {\n        this.displayName = args.display_name.default;\n      }\n      if (args.id) {\n        this.id = args.id;\n      }\n      if (args.internal) {\n        this.internal = args.internal;\n      }\n      if (args.link) {\n        this.link = args.link;\n      }\n      if (args.position) {\n        this.position = args.position;\n      }\n    }\n  }\n\n  public getDocument(includeFields: string[] = []): Object {\n    const documentObj = {};\n    let memberNames = Object.keys(this).filter(\n      key =>\n        typeof key !== 'function' &&\n        key !== 'MEMBER_MAP' &&\n        key !== 'includedFields'\n    );\n\n    // If the fields to return were specified, then filter the array of\n    // properties to assign to the new object literal.\n    if (includeFields && includeFields.length) {\n      memberNames = memberNames.filter(\n        name => includeFields.indexOf(name) > -1\n      );\n    } else if (this.includedFields.length) {\n      memberNames = memberNames.filter(\n        name => this.includedFields.indexOf(name) > -1\n      );\n    }\n\n    // Create a property on the results object.\n    memberNames.forEach(localPropName => {\n      const docPropName: string = localPropName in this.MEMBER_MAP ?\n        this.MEMBER_MAP[localPropName] : localPropName;\n      let localPropVal: any;\n\n      if (typeof this[localPropName] !== 'undefined') {\n        localPropVal = this[localPropName];\n        const isComplexType =\n          typeof localPropVal !== 'number' &&\n          typeof localPropVal !== 'string' &&\n          typeof localPropVal !== 'boolean';\n\n        if (!isComplexType) {\n          documentObj[docPropName] = localPropVal;\n        } else {\n          if (localPropVal instanceof ObjectAttributeDefinition) {\n            // ==> ObjectAttributeValueDefinition - this.defaultValue\n            documentObj[docPropName] = localPropVal.getDocument();\n          } else {\n            // ==> ILocalizedString - this.description & this.displayName\n            documentObj[docPropName] = localPropVal;\n          }\n        }\n      }\n    });\n\n    documentObj['_v'] = '18.8';\n\n    return documentObj;\n  }\n}\n","/**\n * @file OCAPIHelper.ts\n * @fileoverview - Exports a single clsass for modeling the system object\n * attribute definitions, and interacting with the OCAPI service to add, modify,\n * and delete attribute definitions.\n */\n\nimport { ICallSetup } from '../services/ICallSetup';\nimport ObjectAttributeDefinition from '../documents/ObjectAttributeDefinition';\nimport { OCAPIService } from '../services/OCAPIService';\nimport { MetadataView } from '../components/MetadataView';\nimport {\n  window,\n  CancellationTokenSource,\n  CancellationToken,\n  QuickPickOptions,\n  InputBoxOptions\n} from 'vscode';\nimport { MetadataNode } from '../components/MetadataNode';\nimport ObjectAttributeGroup from '../documents/ObjectAttributeGroup';\n\n/**\n * @class OCAPIHelper\n * @classdesc - A class with static helper methods for assisting in making calls\n * to the SFCC Open Commerce API in order to read from and write too the system\n * object definitions used by the SFCC instance.\n */\nexport default class OCAPIHelper {\n  private metadataView: MetadataView;\n  private service: OCAPIService = new OCAPIService();\n\n  /**\n   * Expected values in OCAPI call are:\n   *  - image, boolean, money, quantity,\n   *    password, set_of_string, set_of_int, set_of_double, unknown\n   */\n  public static readonly ATTRIBUTE_TYPES = [\n    'Boolean',\n    'Date',\n    'Date + Time',\n    'Email',\n    'Enum of Integers',\n    'Enum of Strings',\n    'HTML',\n    'Image',\n    'Integer',\n    'Number',\n    'Password',\n    'Set of Integers',\n    'Set of Numbers',\n    'Set of Strings',\n    'String',\n    'Text'\n  ];\n\n  public static readonly ATTRIBUTE_MAP = {\n    'integer': 'int',\n    'number': 'double',\n    'date + time': 'datetime',\n    'enum of integers': 'enum_of_int',\n    'enum of strings': 'enum_of_string',\n    'set of integers': 'set_of_int',\n    'set of numbers': 'set_of_double',\n    'set of strings': 'set_of_string'\n  };\n\n  /**\n   * @param {MetadataView} metaView - The MetadataView class instance that can\n   *    be used to read the seleted items in the MetadataViewProvider instance.\n   */\n  constructor(metaView: MetadataView) {\n    this.metadataView = metaView;\n  }\n\n  /* ========================================================================\n   * Private Instance Members\n   * ======================================================================== */\n\n  /**\n   * Makes a call to the OCAPIService class to add a new system object attribute\n   * definition to the system object who's Id is specified.\n   *\n   * @param {string} objectType - The Id of the system object to that the\n   *    new attribute definition should be added to.\n   * @param {ObjectAttributeDefinition} attributeDefinition - The object\n   *    attribute defintion class instance that can be passed to the OCAPI\n   *    service as the body of the request.\n   * @returns {Promise<Object>} - Returns a promise that resoves to an Object.\n   *    The object is the JSON result reutrned form the service call.\n   */\n  private async addAttributeDefiniton(\n    objectType: string,\n    attributeDefinition: ObjectAttributeDefinition,\n    includeDescription: boolean = false\n  ): Promise<any> {\n    let includeFields = [\n      'displayName',\n      'key',\n      'localizable',\n      'mandatory',\n      'searchable',\n      'siteSpecific',\n      'valueType',\n      'visible'\n    ];\n\n    // Only include the description if it was specified.\n    if (includeDescription) {\n      includeFields.push('description');\n    }\n\n    const docObj = attributeDefinition.getDocument(includeFields);\n    let _callSetup: ICallSetup = null;\n    let _callResult: any;\n    const callData: any = {\n      body: JSON.stringify(docObj),\n      objectType: objectType,\n      id: attributeDefinition.id\n    };\n\n    try {\n      _callSetup = await this.service.getCallSetup(\n        'systemObjectDefinitions',\n        'createAttribute',\n        callData\n      );\n\n      _callResult = await this.service.makeCall(_callSetup);\n    } catch (e) {\n      window.showErrorMessage('ERROR making call to OCAPI: ' + e.message);\n    }\n\n    return Promise.resolve(_callResult);\n  }\n\n  /**\n   * Makes a call to the OCAPIService class to add a new attribute group to the\n   * currently selected system object in the view.\n   *\n   * @param {string} objectType - The Id of the system object to that the\n   *    new aattribute group will be added to.\n   * @param {ObjectAttributeGroup} attributeGroup - An attribute group document.\n   * @returns {Promise<Object>} - Returns a promise that resoves to an Object.\n   *    The object is the JSON result reutrned form the service call.\n   */\n  private async addAttributeGroupDefiniton(\n    objectType: string,\n    attributeGroup: ObjectAttributeGroup\n  ): Promise<any> {\n    let includeFields = ['displayName', 'description', 'id', 'position'];\n\n    attributeGroup.position = 1.0;\n\n    const docObj = attributeGroup.getDocument(includeFields);\n    let _callSetup: ICallSetup = null;\n    let _callResult: any;\n    const callData: any = {\n      body: JSON.stringify(docObj),\n      objectType: objectType,\n      id: attributeGroup.id\n    };\n\n    try {\n      _callSetup = await this.service.getCallSetup(\n        'systemObjectDefinitions',\n        'createAttributeGroup',\n        callData\n      );\n\n      _callResult = await this.service.makeCall(_callSetup);\n    } catch (e) {\n      window.showErrorMessage('ERROR: Unable to add new attribute group', e.message);\n    }\n\n    return Promise.resolve(_callResult);\n  }\n\n  /**\n   * Presents the user with a selection box to choose which attribute group to\n   * add the attribute to. Returns a promise that resolves with the selection.\n   *\n   * @param {string[]} groupIds - The attribute group Ids for the system object.\n   * @returns {Promise<string>} - Returns a promise that resolves with the\n   *    string Id of the selected attribute group as the data.\n   */\n  private async getGroupIdFromUser(groupIds: string[]): Promise<string> {\n    const tokenSource: CancellationTokenSource = new CancellationTokenSource();\n    const cancelAddAttributeToken: CancellationToken = tokenSource.token;\n    const qpOptions: QuickPickOptions = {\n      placeHolder: 'Select the attribute group'\n    };\n    let attributeId: string = '';\n\n    try {\n      // Show a select option box to choose the attribute group.\n      attributeId = await window.showQuickPick(\n        groupIds,\n        qpOptions,\n        cancelAddAttributeToken\n      );\n    } catch (e) {\n      return Promise.reject('User Cancled Action');\n    }\n\n    return attributeId;\n  }\n\n  /**\n   * Validates that a string is an allowed Id for a SFCC SystemObject attribute.\n   *\n   * @param {string} id - The Id to validate against the SFCC criteria.\n   * @returns {string|null} - Returns an error message if the reuslt was not\n   *    valid, OR returns null if the result was valid.\n   */\n  private validateAttributeId(id: string): string {\n    // Make a copy of the id string without any allowed speial characters.\n    let idWithoutAllowed = String(id);\n    // Special chars allowed in SystemAttributeDefinition Id field.\n    const allowedSpecialChars = [\n      '+',\n      '-',\n      '$',\n      '.',\n      '%',\n      '§',\n      '&',\n      '*',\n      '#',\n      '/'\n    ];\n\n    // Remove any allowed special characters.\n    allowedSpecialChars.forEach(char => {\n      idWithoutAllowed.replace(char, '');\n    });\n\n    // Validate that there are no more special characters.\n    const regex = /\\W/;\n    let containsSpecialChars = regex.test(id);\n\n    return containsSpecialChars\n      ? 'Id for attribute contains illegal characters'\n      : null;\n  }\n\n  /* ========================================================================\n   * Public Instance Members\n   * ======================================================================== */\n\n  /**\n   * Uses a 'wizard' like approach to get the needed information for creating a\n   * new system object attribute definition.\n   *  - Input boxes are displayed, one-by-one, to get the attribute definition\n   *    properties.\n   *  - A new node is added to the tree view representing the attribute values\n   *    that have been entered.\n   *  - An indicator is added to show that the attribute is still being\n   *    processed while the request is made to the OCAPI service.\n   *  - A request is made to the OCAPI endpoint to create the system object\n   *    attribute definition, and the indicator is removed from the tree node.\n   *\n   * @param {string} objectType - The ID of the System Object Type that the new\n   *    attribute should be added to.\n   * @returns {Promise<any>} - Returns a Promise that resolves to a results\n   *    object from the API call.\n   */\n  public async addAttributeNode(node: MetadataNode): Promise<any> {\n    // Create a cancelation token instance to cancel the request when needed.\n    const tokenSource: CancellationTokenSource = new CancellationTokenSource();\n    const cancelAddAttributeToken: CancellationToken = tokenSource.token;\n    const objAttributeDefinition: ObjectAttributeDefinition = new ObjectAttributeDefinition(\n      {}\n    );\n\n    /**\n     * @todo: Get display strings from a resource bundle.\n     */\n\n    // Get the system object from the current node.\n    const systemObjectId = node.name;\n\n    // Create options objects for the dialogs.\n    const idInputOptions: InputBoxOptions = {\n      prompt: 'Enter Attribute Id:',\n      validateInput: this.validateAttributeId\n    };\n    const displayNameInputOptions: InputBoxOptions = {\n      prompt: 'Enter Attribute Display Name:'\n    };\n    const qpOptions: QuickPickOptions = {\n      placeHolder: 'Select the type for the attribute'\n    };\n    const descriptionInputOptions = {\n      prompt: 'Enter Attribute Description (Optional):'\n    };\n\n    /* Begin Form Wizard\n       ====================================================================== */\n    try {\n      // Show an input box for the user to enter the Id for the new attribute.\n      const attributeId = await window.showInputBox(\n        idInputOptions,\n        cancelAddAttributeToken\n      );\n\n      // If the user cancels then the return is undefined.\n      if (typeof attributeId === 'undefined') {\n        return Promise.reject({ error: false, cancelled: true });\n      }\n\n      // Show a select option box to choose what type the new attribute will be.\n      let attributeType = await window.showQuickPick(\n        OCAPIHelper.ATTRIBUTE_TYPES,\n        qpOptions,\n        cancelAddAttributeToken\n      );\n\n      // If the user cancels, then exit the wizard.\n      if (typeof attributeType === 'undefined') {\n        return Promise.reject({ error: false, cancelled: true });\n      }\n\n      if (OCAPIHelper.ATTRIBUTE_MAP[attributeType.toLowerCase()]) {\n        attributeType = OCAPIHelper.ATTRIBUTE_MAP[\n          attributeType.toLowerCase()];\n      }\n\n      const displayName = await window.showInputBox(\n        displayNameInputOptions,\n        cancelAddAttributeToken\n      );\n\n      // If the user cancels, then exit the wizard.\n      if (typeof displayName === 'undefined') {\n        return Promise.reject({ error: false, cancelled: true });\n      }\n\n      const description = await window.showInputBox(\n        descriptionInputOptions,\n        cancelAddAttributeToken\n      );\n\n      // If the user cancels, then exit the wizard.\n      if (typeof description === 'undefined') {\n      }\n\n      // Assign attribute values to the request document object.\n      objAttributeDefinition.description.default = description;\n      objAttributeDefinition.displayName.default = displayName;\n      objAttributeDefinition.valueType = attributeType.toLocaleLowerCase();\n      objAttributeDefinition.id = attributeId;\n\n      // Get the currently selected SystemObjects\n      // const selected = metadataView.currentProvider.;\n\n      // Return the reuslt of the API call.\n      return this.addAttributeDefiniton(systemObjectId, objAttributeDefinition);\n    } catch (e) {\n      console.log(e);\n      return Promise.reject({\n        error: true,\n        cancelled: false,\n        errorObject: e\n      });\n    }\n  }\n\n  /**\n   * Uses a 'wizard' like approach to get the needed information for creating a\n   * new attribute group.\n   *  - Input boxes are displayed, one-by-one, to get the group properties.\n   *  - A call is made to OCAPI to create the attribute definition.\n   *  - The tree view is refreshed to show the new attribute in the view.\n   *\n   * @param {string} objectType - The ID of the System Object Type that the new\n   *    attribute should be added to.\n   * @returns {Promise<any>} - Returns a Promise that resolves to a results\n   *    object from the API call.\n   */\n  public async addAttributeGroup(node: MetadataNode): Promise<any> {\n    // Create a cancelation token instance to cancel the request when needed.\n    const tokenSource: CancellationTokenSource = new CancellationTokenSource();\n    const cancelAddGroupToken: CancellationToken = tokenSource.token;\n    const attributeGroup: ObjectAttributeGroup = new ObjectAttributeGroup({});\n    const objectType = node.objectTypeDefinition.objectType;\n\n    const getIdOptions: InputBoxOptions = {\n      prompt: 'Group Id: ',\n      validateInput: this.validateAttributeId\n    };\n    const getDisplayNameOptions: InputBoxOptions = {\n      prompt: 'Display Name: '\n    };\n    const getDescriptionOptions: InputBoxOptions = {\n      prompt: 'Group Description: '\n    };\n\n    /* ======================================================================\n     * Begin Form Wizard\n     * ====================================================================== */\n    try {\n      // Get ID\n      const attrGroupId: string = await window.showInputBox(\n        getIdOptions,\n        cancelAddGroupToken\n      );\n\n      // Handle user cancellation\n      if (typeof attrGroupId === 'undefined') {\n        return Promise.reject({ error: false, cancelled: true });\n      }\n\n      // Assign the new attribute to the OCAPI request document.\n      attributeGroup.id = attrGroupId;\n\n      // Get Attribute Group display name\n      const attrGroupDisplayName = await window.showInputBox(\n        getDisplayNameOptions,\n        cancelAddGroupToken\n      );\n\n      // Handle User Cancellation\n      if (typeof attrGroupDisplayName === 'undefined') {\n        return Promise.reject({ error: false, cancelled: true });\n      }\n\n      // Assign to new attribute group instance.\n      attributeGroup.displayName = attrGroupDisplayName;\n\n      // Get Attribute Group display name\n      const attrGroupDescription = await window.showInputBox(\n        getDescriptionOptions,\n        cancelAddGroupToken\n      );\n\n      // Handle User Cancellation\n      if (typeof attrGroupDescription === 'undefined') {\n        return Promise.reject({ error: false, cancelled: true });\n      }\n\n      // Assign to new attribute group instance.\n      attributeGroup.description = attrGroupDescription;\n\n      /* ====================================================================\n       * End Form Wizard\n       * ==================================================================== */\n\n      return this.addAttributeGroupDefiniton(objectType, attributeGroup);\n    } catch (e) {\n      console.log(e);\n      Promise.reject({ error: true, cancelled: false, errorObject: e });\n    }\n  }\n\n  /**\n   * Assings the speciifecd attribute definitions to the specified attribute\n   * group using a call to the OCAPIService.\n   *\n   * @param node - An array of selected MetadataNodes\n   */\n  public async assignAttributesToGroup(node: MetadataNode): Promise<any> {\n    const path = node.parentId.split('.');\n    const objectType = path[path.length - 2];\n    let availableGroups: string[] = [];\n    let _callSetup: ICallSetup;\n    let _callResult: any;\n\n    // First, get the attribute groups to display as choices.\n    try {\n      _callSetup = await this.service.getCallSetup(\n        'systemObjectDefinitions',\n        'getAttributeGroups',\n        {\n          select: '(**)',\n          objectType: objectType\n        }\n      );\n\n      _callResult = await this.service.makeCall(_callSetup);\n\n      // If the API call returns data create the first level of a tree.\n      if (\n        !_callResult.error &&\n        typeof _callResult.data !== 'undefined' &&\n        Array.isArray(_callResult.data)\n      ) {\n        availableGroups = _callResult.data.map(group => group.id);\n        const assignGroupId = await this.getGroupIdFromUser(availableGroups);\n\n        _callSetup = await this.service.getCallSetup(\n          'systemObjectDefinitions',\n          'assignAttributeToGroup',\n          {\n            objectType: objectType,\n            groupId: assignGroupId,\n            attributeId: node.objectAttributeDefinition.id\n          }\n        );\n\n        return await this.service.makeCall(_callSetup);\n      } else if (\n        !_callResult.error &&\n        typeof _callResult.count !== 'undefined' &&\n        _callResult.count === 0\n      ) {\n        const errMsg = 'There are no attribute groups.';\n        window.showErrorMessage(errMsg);\n        Promise.reject(errMsg);\n      }\n    } catch (e) {\n      const errMsg = 'Unable to assign attribute to group: ';\n      console.log(errMsg + e.message);\n      window.showErrorMessage('Unable to assign attribute to group.');\n      return Promise.reject()\n    }\n\n    return Promise.reject('ERROR: Unable to assign attribute to group.');\n  }\n\n  /**\n   * Deletes the selected attribute definition from the system object.\n   *\n   * @param {MetadataNode} node - The selected tree node instance.\n   * @returns {Promise<any>} - Returns a Promise that resolves to a results\n   *    object from the API call.\n   */\n  public async deleteAttributeDefinition(node: MetadataNode): Promise<any> {\n    const path = node.parentId.split('.');\n    const objectType = path[path.length - 2];\n    const attributeId = node.objectAttributeDefinition.id;\n    let _callSetup: ICallSetup;\n\n    try {\n      _callSetup = await this.service.getCallSetup(\n        'systemObjectDefinitions',\n        'deleteAttribute',\n        {\n          objectType: objectType,\n          id: attributeId\n        }\n      );\n\n      return await this.service.makeCall(_callSetup);\n    } catch (e) {\n      console.log(e);\n      // If there was an error, return the error message for display.\n      return Promise.reject('ERROR occured while deleting the attribute.');\n    }\n  }\n\n  /**\n   * Makes an OCAPI call to set the default value of a system object attribute\n   * if this operation is supported on the attribute/object type combination.\n   *\n   * @param {MetadataNode} node - The node object that was selected when the\n   *    context menu option was selected.\n   * @returns {Promise<any>} - Returns a promise that resolves with the reuslts\n   *    of the call to the OCAPI endpoint.\n   */\n  public async setDefaultAttributeValue(node: MetadataNode): Promise<any> {\n    const ALLOWED_SYSTEM_OBJECTS = [\n      'SitePreferences',\n      'OrganizationPreferences'\n    ];\n    const ALLOWED_ATTRIBUTE_TYPES = ['string', 'number', 'boolean'];\n    const attributeDefinition: ObjectAttributeDefinition =\n      node.objectAttributeDefinition;\n    let isCallAllowed = ALLOWED_SYSTEM_OBJECTS.some(\n      type => 'root.systemObjectDefinitions.' + type === node.parentId\n    );\n\n    // Check if this is a system object that allows for default attribute values,\n    // and that the data type allows for default values.\n    if (\n      isCallAllowed &&\n      ALLOWED_ATTRIBUTE_TYPES.indexOf(attributeDefinition.valueType) > -1\n    ) {\n      /** @todo make call to the OCAPI api to set the default value */\n    }\n\n    return Promise.reject('METHOD NOT IMPLEMENTED');\n  }\n}\n","import { MetadataNode } from '../components/MetadataNode';\nimport { window, workspace } from 'vscode';\nimport ObjectAttributeDefinition from '../documents/ObjectAttributeDefinition';\n\n/**\n * @file XMLHandler.ts\n * @fileoverview - Exports a class that can be used for handling XML and\n *    building and parsing XML strings for generating SFCC schema XML.\n */\n\n/**\n * @class XMLHandler\n * @classdesc - The XMLHandler class can be instantiated for generating XML\n *    from SFCC system object & attribute definitions.\n */\nexport default class XMLHandler {\n  /* Class imports */\n  xmlLib = require('xmlbuilder');\n\n  /* Instance members */\n  public static NAMESPACE_STRING: String =\n    'http://www.demandware.com/xml/impex/metadata/2006-10-31';\n\n  /**\n   * @constructor\n   */\n  constructor() {\n    /** @todo: Setup Instance */\n  }\n\n  /* ========================================================================\n   * Private Helper Functions\n   * ======================================================================== */\n\n  /**\n   * Gets the XML node for an ObjectAttributeDefinition class instance.\n   *\n   * @private\n   * @param {Object} rootNode - The root node that can be used for building the\n   *    necessary child XML.\n   * @param {string} systemObjectType - The system object that the attribute\n   *    will be added to.\n   * @param {ObjectAttributeDefinition} attribute - The ObjectAttributeDefinition\n   *    class instance to derive the XML data from.\n   */\n  private getObjectAttributeXML(rootNode: any,\n    systemObjectType: string,\n    attribute: ObjectAttributeDefinition\n  ) {\n    const valType = attribute.valueType.toLocaleLowerCase();\n\n    // Create the XML tree.\n    const attrDefsNode = rootNode\n      .ele('type-extension', { 'type-id': systemObjectType })\n      .ele('custom-attribute-definitions');\n\n    // Create the attribute definition node.\n    const attrDefNode = attrDefsNode.ele('attribute-definition', {\n      'attribute-id': attribute.id\n    });\n\n    // Define the attribute properties.\n    attrDefNode.ele(\n      'display-name',\n      { 'xml:lang': 'x-default' },\n      attribute.displayName.default\n    );\n    attrDefNode.ele(\n      'description',\n      { 'xml:lang': 'x-default' },\n      attribute.description.default\n    );\n    attrDefNode.ele('type', attribute.valueType);\n    attrDefNode.ele('mandatory-flag', attribute.mandatory);\n    attrDefNode.ele('externally-managed-flag', attribute.externallyManaged);\n\n    /**\n     * Define properties that are specific to certain value types.\n     */\n    if (valType === 'string') {\n      // Default type is 'string'\n      attrDefNode.ele({ 'min-length': attribute.minLength });\n    } else if (valType.indexOf('enum') > -1 &&\n      attribute.valueDefinitions.length\n    ) {\n      const valDefs = attrDefNode.ele('value-definitions');\n      // Add any value-definitions that are configured for the attribute.\n      attribute.valueDefinitions.forEach(function (valDef) {\n          if (valDef.displayValue && valDef.value) {\n            const valDefXML = valDefs.ele('value-definition');\n            valDefXML.ele('display',\n              { 'xml:lang': 'x-default' },\n              valDef.displayValue.default\n            );\n\n            valDefXML.ele('value', valDef.value.toString());\n          }\n      });\n    }\n\n    /**\n     * Define properties specific to system object types\n     */\n    switch (systemObjectType) {\n      case 'Product':\n        attrDefNode.ele('localizable-flag', attribute.localizable);\n        attrDefNode.ele('site-specific-flag', attribute.siteSpecific);\n        attrDefNode.ele('visible-flag', attribute.visible);\n        attrDefNode.ele('order-required-flag', attribute.orderRequired);\n        attrDefNode.ele('externally-defined-flag', attribute.externallyDefined);\n        break;\n\n      default:\n        break;\n    }\n  }\n\n  /* ========================================================================\n   * Public Exported Methods\n   * ======================================================================== */\n\n  /**\n   * Gets the XML representation of the Metanode, creates a blank file, and\n   * populates the file with the generated XML.\n   *\n   * @param {MetadataNode} metaNode - The metadata node that represents the SFCC\n   *    meta object to get the XML representation of.\n   * @returns {Promise<TextEditor>} - Returns a promise that resolves to the\n   *    TextDocument instance.\n   */\n  public async getXMLFromNode(metaNode: MetadataNode) {\n    const systemObjectType = metaNode.parentId.split('.').pop();\n\n    // Create the XML document in memory for modification.\n    const rootNode = new this.xmlLib.create('metadata', {\n      encoding: 'utf-8'\n    }).att('xmlns', XMLHandler.NAMESPACE_STRING);\n\n    if (metaNode.nodeType === 'objectAttributeDefinition') {\n      const attribute = metaNode.objectAttributeDefinition;\n      this.getObjectAttributeXML(rootNode, systemObjectType, attribute);\n    }\n\n    // Create the text document and show in the editor.\n    workspace\n      .openTextDocument({\n        language: 'xml',\n        content: rootNode.end({ allowEmpty: false, pretty: true })\n      })\n      .then(doc => {\n        window.showTextDocument(doc);\n      });\n  }\n}\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLDOMImplementation, XMLDocument, XMLDocumentCB, XMLStreamWriter, XMLStringWriter, assign, isFunction, ref;\n\n  ref = require('./Utility'), assign = ref.assign, isFunction = ref.isFunction;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLDocumentCB = require('./XMLDocumentCB');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  XMLStreamWriter = require('./XMLStreamWriter');\n\n  NodeType = require('./NodeType');\n\n  WriterState = require('./WriterState');\n\n  module.exports.create = function(name, xmldec, doctype, options) {\n    var doc, root;\n    if (name == null) {\n      throw new Error(\"Root element needs a name.\");\n    }\n    options = assign({}, xmldec, doctype, options);\n    doc = new XMLDocument(options);\n    root = doc.element(name);\n    if (!options.headless) {\n      doc.declaration(options);\n      if ((options.pubID != null) || (options.sysID != null)) {\n        doc.dtd(options);\n      }\n    }\n    return root;\n  };\n\n  module.exports.begin = function(options, onData, onEnd) {\n    var ref1;\n    if (isFunction(options)) {\n      ref1 = [options, onData], onData = ref1[0], onEnd = ref1[1];\n      options = {};\n    }\n    if (onData) {\n      return new XMLDocumentCB(options, onData, onEnd);\n    } else {\n      return new XMLDocument(options);\n    }\n  };\n\n  module.exports.stringWriter = function(options) {\n    return new XMLStringWriter(options);\n  };\n\n  module.exports.streamWriter = function(stream, options) {\n    return new XMLStreamWriter(stream, options);\n  };\n\n  module.exports.implementation = new XMLDOMImplementation();\n\n  module.exports.nodeType = NodeType;\n\n  module.exports.writerState = WriterState;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var assign, getValue, isArray, isEmpty, isFunction, isObject, isPlainObject,\n    slice = [].slice,\n    hasProp = {}.hasOwnProperty;\n\n  assign = function() {\n    var i, key, len, source, sources, target;\n    target = arguments[0], sources = 2 <= arguments.length ? slice.call(arguments, 1) : [];\n    if (isFunction(Object.assign)) {\n      Object.assign.apply(null, arguments);\n    } else {\n      for (i = 0, len = sources.length; i < len; i++) {\n        source = sources[i];\n        if (source != null) {\n          for (key in source) {\n            if (!hasProp.call(source, key)) continue;\n            target[key] = source[key];\n          }\n        }\n      }\n    }\n    return target;\n  };\n\n  isFunction = function(val) {\n    return !!val && Object.prototype.toString.call(val) === '[object Function]';\n  };\n\n  isObject = function(val) {\n    var ref;\n    return !!val && ((ref = typeof val) === 'function' || ref === 'object');\n  };\n\n  isArray = function(val) {\n    if (isFunction(Array.isArray)) {\n      return Array.isArray(val);\n    } else {\n      return Object.prototype.toString.call(val) === '[object Array]';\n    }\n  };\n\n  isEmpty = function(val) {\n    var key;\n    if (isArray(val)) {\n      return !val.length;\n    } else {\n      for (key in val) {\n        if (!hasProp.call(val, key)) continue;\n        return false;\n      }\n      return true;\n    }\n  };\n\n  isPlainObject = function(val) {\n    var ctor, proto;\n    return isObject(val) && (proto = Object.getPrototypeOf(val)) && (ctor = proto.constructor) && (typeof ctor === 'function') && (ctor instanceof ctor) && (Function.prototype.toString.call(ctor) === Function.prototype.toString.call(Object));\n  };\n\n  getValue = function(obj) {\n    if (isFunction(obj.valueOf)) {\n      return obj.valueOf();\n    } else {\n      return obj;\n    }\n  };\n\n  module.exports.assign = assign;\n\n  module.exports.isFunction = isFunction;\n\n  module.exports.isObject = isObject;\n\n  module.exports.isArray = isArray;\n\n  module.exports.isEmpty = isEmpty;\n\n  module.exports.isPlainObject = isPlainObject;\n\n  module.exports.getValue = getValue;\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMImplementation;\n\n  module.exports = XMLDOMImplementation = (function() {\n    function XMLDOMImplementation() {}\n\n    XMLDOMImplementation.prototype.hasFeature = function(feature, version) {\n      return true;\n    };\n\n    XMLDOMImplementation.prototype.createDocumentType = function(qualifiedName, publicId, systemId) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createDocument = function(namespaceURI, qualifiedName, doctype) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.createHTMLDocument = function(title) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLDOMImplementation.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLDOMImplementation;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDOMConfiguration, XMLDOMImplementation, XMLDocument, XMLNode, XMLStringWriter, XMLStringifier, isPlainObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isPlainObject = require('./Utility').isPlainObject;\n\n  XMLDOMImplementation = require('./XMLDOMImplementation');\n\n  XMLDOMConfiguration = require('./XMLDOMConfiguration');\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  module.exports = XMLDocument = (function(superClass) {\n    extend(XMLDocument, superClass);\n\n    function XMLDocument(options) {\n      XMLDocument.__super__.constructor.call(this, null);\n      this.name = \"#document\";\n      this.type = NodeType.Document;\n      this.documentURI = null;\n      this.domConfig = new XMLDOMConfiguration();\n      options || (options = {});\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.stringify = new XMLStringifier(options);\n    }\n\n    Object.defineProperty(XMLDocument.prototype, 'implementation', {\n      value: new XMLDOMImplementation()\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'doctype', {\n      get: function() {\n        var child, i, len, ref;\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.DocType) {\n            return child;\n          }\n        }\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'documentElement', {\n      get: function() {\n        return this.rootObject || null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'strictErrorChecking', {\n      get: function() {\n        return false;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlEncoding', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].encoding;\n        } else {\n          return null;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlStandalone', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].standalone === 'yes';\n        } else {\n          return false;\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'xmlVersion', {\n      get: function() {\n        if (this.children.length !== 0 && this.children[0].type === NodeType.Declaration) {\n          return this.children[0].version;\n        } else {\n          return \"1.0\";\n        }\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'URL', {\n      get: function() {\n        return this.documentURI;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'origin', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'compatMode', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'characterSet', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDocument.prototype, 'contentType', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDocument.prototype.end = function(writer) {\n      var writerOptions;\n      writerOptions = {};\n      if (!writer) {\n        writer = this.options.writer;\n      } else if (isPlainObject(writer)) {\n        writerOptions = writer;\n        writer = this.options.writer;\n      }\n      return writer.document(this, writer.filterOptions(writerOptions));\n    };\n\n    XMLDocument.prototype.toString = function(options) {\n      return this.options.writer.document(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocument.prototype.createElement = function(tagName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createDocumentFragment = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTextNode = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createComment = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createCDATASection = function(data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createProcessingInstruction = function(target, data) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttribute = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEntityReference = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.importNode = function(importedNode, deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createElementNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createAttributeNS = function(namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementById = function(elementId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.adoptNode = function(source) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.normalizeDocument = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.renameNode = function(node, namespaceURI, qualifiedName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createEvent = function(eventInterface) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createRange = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createNodeIterator = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLDocument.prototype.createTreeWalker = function(root, whatToShow, filter) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLDocument;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMConfiguration, XMLDOMErrorHandler, XMLDOMStringList;\n\n  XMLDOMErrorHandler = require('./XMLDOMErrorHandler');\n\n  XMLDOMStringList = require('./XMLDOMStringList');\n\n  module.exports = XMLDOMConfiguration = (function() {\n    function XMLDOMConfiguration() {\n      var clonedSelf;\n      this.defaultParams = {\n        \"canonical-form\": false,\n        \"cdata-sections\": false,\n        \"comments\": false,\n        \"datatype-normalization\": false,\n        \"element-content-whitespace\": true,\n        \"entities\": true,\n        \"error-handler\": new XMLDOMErrorHandler(),\n        \"infoset\": true,\n        \"validate-if-schema\": false,\n        \"namespaces\": true,\n        \"namespace-declarations\": true,\n        \"normalize-characters\": false,\n        \"schema-location\": '',\n        \"schema-type\": '',\n        \"split-cdata-sections\": true,\n        \"validate\": false,\n        \"well-formed\": true\n      };\n      this.params = clonedSelf = Object.create(this.defaultParams);\n    }\n\n    Object.defineProperty(XMLDOMConfiguration.prototype, 'parameterNames', {\n      get: function() {\n        return new XMLDOMStringList(Object.keys(this.defaultParams));\n      }\n    });\n\n    XMLDOMConfiguration.prototype.getParameter = function(name) {\n      if (this.params.hasOwnProperty(name)) {\n        return this.params[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLDOMConfiguration.prototype.canSetParameter = function(name, value) {\n      return true;\n    };\n\n    XMLDOMConfiguration.prototype.setParameter = function(name, value) {\n      if (value != null) {\n        return this.params[name] = value;\n      } else {\n        return delete this.params[name];\n      }\n    };\n\n    return XMLDOMConfiguration;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMErrorHandler;\n\n  module.exports = XMLDOMErrorHandler = (function() {\n    function XMLDOMErrorHandler() {}\n\n    XMLDOMErrorHandler.prototype.handleError = function(error) {\n      throw new Error(error);\n    };\n\n    return XMLDOMErrorHandler;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLDOMStringList;\n\n  module.exports = XMLDOMStringList = (function() {\n    function XMLDOMStringList(arr) {\n      this.arr = arr || [];\n    }\n\n    Object.defineProperty(XMLDOMStringList.prototype, 'length', {\n      get: function() {\n        return this.arr.length;\n      }\n    });\n\n    XMLDOMStringList.prototype.item = function(index) {\n      return this.arr[index] || null;\n    };\n\n    XMLDOMStringList.prototype.contains = function(str) {\n      return this.arr.indexOf(str) !== -1;\n    };\n\n    return XMLDOMStringList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var DocumentPosition, NodeType, XMLCData, XMLComment, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLNamedNodeMap, XMLNode, XMLNodeList, XMLProcessingInstruction, XMLRaw, XMLText, getValue, isEmpty, isFunction, isObject, ref1,\n    hasProp = {}.hasOwnProperty;\n\n  ref1 = require('./Utility'), isObject = ref1.isObject, isFunction = ref1.isFunction, isEmpty = ref1.isEmpty, getValue = ref1.getValue;\n\n  XMLElement = null;\n\n  XMLCData = null;\n\n  XMLComment = null;\n\n  XMLDeclaration = null;\n\n  XMLDocType = null;\n\n  XMLRaw = null;\n\n  XMLText = null;\n\n  XMLProcessingInstruction = null;\n\n  XMLDummy = null;\n\n  NodeType = null;\n\n  XMLNodeList = null;\n\n  XMLNamedNodeMap = null;\n\n  DocumentPosition = null;\n\n  module.exports = XMLNode = (function() {\n    function XMLNode(parent1) {\n      this.parent = parent1;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      this.value = null;\n      this.children = [];\n      this.baseURI = null;\n      if (!XMLElement) {\n        XMLElement = require('./XMLElement');\n        XMLCData = require('./XMLCData');\n        XMLComment = require('./XMLComment');\n        XMLDeclaration = require('./XMLDeclaration');\n        XMLDocType = require('./XMLDocType');\n        XMLRaw = require('./XMLRaw');\n        XMLText = require('./XMLText');\n        XMLProcessingInstruction = require('./XMLProcessingInstruction');\n        XMLDummy = require('./XMLDummy');\n        NodeType = require('./NodeType');\n        XMLNodeList = require('./XMLNodeList');\n        XMLNamedNodeMap = require('./XMLNamedNodeMap');\n        DocumentPosition = require('./DocumentPosition');\n      }\n    }\n\n    Object.defineProperty(XMLNode.prototype, 'nodeName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nodeValue', {\n      get: function() {\n        return this.value;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'parentNode', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'childNodes', {\n      get: function() {\n        if (!this.childNodeList || !this.childNodeList.nodes) {\n          this.childNodeList = new XMLNodeList(this.children);\n        }\n        return this.childNodeList;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'firstChild', {\n      get: function() {\n        return this.children[0] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'lastChild', {\n      get: function() {\n        return this.children[this.children.length - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'previousSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i - 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'nextSibling', {\n      get: function() {\n        var i;\n        i = this.parent.children.indexOf(this);\n        return this.parent.children[i + 1] || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'ownerDocument', {\n      get: function() {\n        return this.document() || null;\n      }\n    });\n\n    Object.defineProperty(XMLNode.prototype, 'textContent', {\n      get: function() {\n        var child, j, len, ref2, str;\n        if (this.nodeType === NodeType.Element || this.nodeType === NodeType.DocumentFragment) {\n          str = '';\n          ref2 = this.children;\n          for (j = 0, len = ref2.length; j < len; j++) {\n            child = ref2[j];\n            if (child.textContent) {\n              str += child.textContent;\n            }\n          }\n          return str;\n        } else {\n          return null;\n        }\n      },\n      set: function(value) {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLNode.prototype.setParent = function(parent) {\n      var child, j, len, ref2, results;\n      this.parent = parent;\n      if (parent) {\n        this.options = parent.options;\n        this.stringify = parent.stringify;\n      }\n      ref2 = this.children;\n      results = [];\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        results.push(child.setParent(this));\n      }\n      return results;\n    };\n\n    XMLNode.prototype.element = function(name, attributes, text) {\n      var childNode, item, j, k, key, lastChild, len, len1, ref2, ref3, val;\n      lastChild = null;\n      if (attributes === null && (text == null)) {\n        ref2 = [{}, null], attributes = ref2[0], text = ref2[1];\n      }\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref3 = [attributes, text], text = ref3[0], attributes = ref3[1];\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          item = name[j];\n          lastChild = this.element(item);\n        }\n      } else if (isFunction(name)) {\n        lastChild = this.element(name.apply());\n      } else if (isObject(name)) {\n        for (key in name) {\n          if (!hasProp.call(name, key)) continue;\n          val = name[key];\n          if (isFunction(val)) {\n            val = val.apply();\n          }\n          if (!this.options.ignoreDecorators && this.stringify.convertAttKey && key.indexOf(this.stringify.convertAttKey) === 0) {\n            lastChild = this.attribute(key.substr(this.stringify.convertAttKey.length), val);\n          } else if (!this.options.separateArrayItems && Array.isArray(val) && isEmpty(val)) {\n            lastChild = this.dummy();\n          } else if (isObject(val) && isEmpty(val)) {\n            lastChild = this.element(key);\n          } else if (!this.options.keepNullNodes && (val == null)) {\n            lastChild = this.dummy();\n          } else if (!this.options.separateArrayItems && Array.isArray(val)) {\n            for (k = 0, len1 = val.length; k < len1; k++) {\n              item = val[k];\n              childNode = {};\n              childNode[key] = item;\n              lastChild = this.element(childNode);\n            }\n          } else if (isObject(val)) {\n            if (!this.options.ignoreDecorators && this.stringify.convertTextKey && key.indexOf(this.stringify.convertTextKey) === 0) {\n              lastChild = this.element(val);\n            } else {\n              lastChild = this.element(key);\n              lastChild.element(val);\n            }\n          } else {\n            lastChild = this.element(key, val);\n          }\n        }\n      } else if (!this.options.keepNullNodes && text === null) {\n        lastChild = this.dummy();\n      } else {\n        if (!this.options.ignoreDecorators && this.stringify.convertTextKey && name.indexOf(this.stringify.convertTextKey) === 0) {\n          lastChild = this.text(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCDataKey && name.indexOf(this.stringify.convertCDataKey) === 0) {\n          lastChild = this.cdata(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertCommentKey && name.indexOf(this.stringify.convertCommentKey) === 0) {\n          lastChild = this.comment(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertRawKey && name.indexOf(this.stringify.convertRawKey) === 0) {\n          lastChild = this.raw(text);\n        } else if (!this.options.ignoreDecorators && this.stringify.convertPIKey && name.indexOf(this.stringify.convertPIKey) === 0) {\n          lastChild = this.instruction(name.substr(this.stringify.convertPIKey.length), text);\n        } else {\n          lastChild = this.node(name, attributes, text);\n        }\n      }\n      if (lastChild == null) {\n        throw new Error(\"Could not create any elements with: \" + name + \". \" + this.debugInfo());\n      }\n      return lastChild;\n    };\n\n    XMLNode.prototype.insertBefore = function(name, attributes, text) {\n      var child, i, newChild, refChild, removed;\n      if (name != null ? name.type : void 0) {\n        newChild = name;\n        refChild = attributes;\n        newChild.setParent(this);\n        if (refChild) {\n          i = children.indexOf(refChild);\n          removed = children.splice(i);\n          children.push(newChild);\n          Array.prototype.push.apply(children, removed);\n        } else {\n          children.push(newChild);\n        }\n        return newChild;\n      } else {\n        if (this.isRoot) {\n          throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n        }\n        i = this.parent.children.indexOf(this);\n        removed = this.parent.children.splice(i);\n        child = this.parent.element(name, attributes, text);\n        Array.prototype.push.apply(this.parent.children, removed);\n        return child;\n      }\n    };\n\n    XMLNode.prototype.insertAfter = function(name, attributes, text) {\n      var child, i, removed;\n      if (this.isRoot) {\n        throw new Error(\"Cannot insert elements at root level. \" + this.debugInfo(name));\n      }\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.element(name, attributes, text);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return child;\n    };\n\n    XMLNode.prototype.remove = function() {\n      var i, ref2;\n      if (this.isRoot) {\n        throw new Error(\"Cannot remove the root element. \" + this.debugInfo());\n      }\n      i = this.parent.children.indexOf(this);\n      [].splice.apply(this.parent.children, [i, i - i + 1].concat(ref2 = [])), ref2;\n      return this.parent;\n    };\n\n    XMLNode.prototype.node = function(name, attributes, text) {\n      var child, ref2;\n      if (name != null) {\n        name = getValue(name);\n      }\n      attributes || (attributes = {});\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref2 = [attributes, text], text = ref2[0], attributes = ref2[1];\n      }\n      child = new XMLElement(this, name, attributes);\n      if (text != null) {\n        child.text(text);\n      }\n      this.children.push(child);\n      return child;\n    };\n\n    XMLNode.prototype.text = function(value) {\n      var child;\n      if (isObject(value)) {\n        this.element(value);\n      }\n      child = new XMLText(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.cdata = function(value) {\n      var child;\n      child = new XMLCData(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.comment = function(value) {\n      var child;\n      child = new XMLComment(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.commentBefore = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.commentAfter = function(value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.comment(value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.raw = function(value) {\n      var child;\n      child = new XMLRaw(this, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLNode.prototype.dummy = function() {\n      var child;\n      child = new XMLDummy(this);\n      return child;\n    };\n\n    XMLNode.prototype.instruction = function(target, value) {\n      var insTarget, insValue, instruction, j, len;\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (j = 0, len = target.length; j < len; j++) {\n          insTarget = target[j];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        instruction = new XMLProcessingInstruction(this, target, value);\n        this.children.push(instruction);\n      }\n      return this;\n    };\n\n    XMLNode.prototype.instructionBefore = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.instructionAfter = function(target, value) {\n      var child, i, removed;\n      i = this.parent.children.indexOf(this);\n      removed = this.parent.children.splice(i + 1);\n      child = this.parent.instruction(target, value);\n      Array.prototype.push.apply(this.parent.children, removed);\n      return this;\n    };\n\n    XMLNode.prototype.declaration = function(version, encoding, standalone) {\n      var doc, xmldec;\n      doc = this.document();\n      xmldec = new XMLDeclaration(doc, version, encoding, standalone);\n      if (doc.children.length === 0) {\n        doc.children.unshift(xmldec);\n      } else if (doc.children[0].type === NodeType.Declaration) {\n        doc.children[0] = xmldec;\n      } else {\n        doc.children.unshift(xmldec);\n      }\n      return doc.root() || doc;\n    };\n\n    XMLNode.prototype.dtd = function(pubID, sysID) {\n      var child, doc, doctype, i, j, k, len, len1, ref2, ref3;\n      doc = this.document();\n      doctype = new XMLDocType(doc, pubID, sysID);\n      ref2 = doc.children;\n      for (i = j = 0, len = ref2.length; j < len; i = ++j) {\n        child = ref2[i];\n        if (child.type === NodeType.DocType) {\n          doc.children[i] = doctype;\n          return doctype;\n        }\n      }\n      ref3 = doc.children;\n      for (i = k = 0, len1 = ref3.length; k < len1; i = ++k) {\n        child = ref3[i];\n        if (child.isRoot) {\n          doc.children.splice(i, 0, doctype);\n          return doctype;\n        }\n      }\n      doc.children.push(doctype);\n      return doctype;\n    };\n\n    XMLNode.prototype.up = function() {\n      if (this.isRoot) {\n        throw new Error(\"The root node has no parent. Use doc() if you need to get the document object.\");\n      }\n      return this.parent;\n    };\n\n    XMLNode.prototype.root = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node.rootObject;\n        } else if (node.isRoot) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.document = function() {\n      var node;\n      node = this;\n      while (node) {\n        if (node.type === NodeType.Document) {\n          return node;\n        } else {\n          node = node.parent;\n        }\n      }\n    };\n\n    XMLNode.prototype.end = function(options) {\n      return this.document().end(options);\n    };\n\n    XMLNode.prototype.prev = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i < 1) {\n        throw new Error(\"Already at the first node. \" + this.debugInfo());\n      }\n      return this.parent.children[i - 1];\n    };\n\n    XMLNode.prototype.next = function() {\n      var i;\n      i = this.parent.children.indexOf(this);\n      if (i === -1 || i === this.parent.children.length - 1) {\n        throw new Error(\"Already at the last node. \" + this.debugInfo());\n      }\n      return this.parent.children[i + 1];\n    };\n\n    XMLNode.prototype.importDocument = function(doc) {\n      var clonedRoot;\n      clonedRoot = doc.root().clone();\n      clonedRoot.parent = this;\n      clonedRoot.isRoot = false;\n      this.children.push(clonedRoot);\n      return this;\n    };\n\n    XMLNode.prototype.debugInfo = function(name) {\n      var ref2, ref3;\n      name = name || this.name;\n      if ((name == null) && !((ref2 = this.parent) != null ? ref2.name : void 0)) {\n        return \"\";\n      } else if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else if (!((ref3 = this.parent) != null ? ref3.name : void 0)) {\n        return \"node: <\" + name + \">\";\n      } else {\n        return \"node: <\" + name + \">, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLNode.prototype.ele = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.doc = function() {\n      return this.document();\n    };\n\n    XMLNode.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLNode.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLNode.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLNode.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLNode.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLNode.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLNode.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLNode.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLNode.prototype.u = function() {\n      return this.up();\n    };\n\n    XMLNode.prototype.importXMLBuilder = function(doc) {\n      return this.importDocument(doc);\n    };\n\n    XMLNode.prototype.replaceChild = function(newChild, oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.removeChild = function(oldChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.appendChild = function(newChild) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.hasChildNodes = function() {\n      return this.children.length !== 0;\n    };\n\n    XMLNode.prototype.cloneNode = function(deep) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.normalize = function() {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isSupported = function(feature, version) {\n      return true;\n    };\n\n    XMLNode.prototype.hasAttributes = function() {\n      return this.attribs.length !== 0;\n    };\n\n    XMLNode.prototype.compareDocumentPosition = function(other) {\n      var ref, res;\n      ref = this;\n      if (ref === other) {\n        return 0;\n      } else if (this.document() !== other.document()) {\n        res = DocumentPosition.Disconnected | DocumentPosition.ImplementationSpecific;\n        if (Math.random() < 0.5) {\n          res |= DocumentPosition.Preceding;\n        } else {\n          res |= DocumentPosition.Following;\n        }\n        return res;\n      } else if (ref.isAncestor(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Preceding;\n      } else if (ref.isDescendant(other)) {\n        return DocumentPosition.Contains | DocumentPosition.Following;\n      } else if (ref.isPreceding(other)) {\n        return DocumentPosition.Preceding;\n      } else {\n        return DocumentPosition.Following;\n      }\n    };\n\n    XMLNode.prototype.isSameNode = function(other) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupPrefix = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isDefaultNamespace = function(namespaceURI) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.lookupNamespaceURI = function(prefix) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.isEqualNode = function(node) {\n      var i, j, ref2;\n      if (node.nodeType !== this.nodeType) {\n        return false;\n      }\n      if (node.children.length !== this.children.length) {\n        return false;\n      }\n      for (i = j = 0, ref2 = this.children.length - 1; 0 <= ref2 ? j <= ref2 : j >= ref2; i = 0 <= ref2 ? ++j : --j) {\n        if (!this.children[i].isEqualNode(node.children[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    XMLNode.prototype.getFeature = function(feature, version) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.setUserData = function(key, data, handler) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.getUserData = function(key) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLNode.prototype.contains = function(other) {\n      if (!other) {\n        return false;\n      }\n      return other === this || this.isDescendant(other);\n    };\n\n    XMLNode.prototype.isDescendant = function(node) {\n      var child, isDescendantChild, j, len, ref2;\n      ref2 = this.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (node === child) {\n          return true;\n        }\n        isDescendantChild = child.isDescendant(node);\n        if (isDescendantChild) {\n          return true;\n        }\n      }\n      return false;\n    };\n\n    XMLNode.prototype.isAncestor = function(node) {\n      return node.isDescendant(this);\n    };\n\n    XMLNode.prototype.isPreceding = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos < thisPos;\n      }\n    };\n\n    XMLNode.prototype.isFollowing = function(node) {\n      var nodePos, thisPos;\n      nodePos = this.treePosition(node);\n      thisPos = this.treePosition(this);\n      if (nodePos === -1 || thisPos === -1) {\n        return false;\n      } else {\n        return nodePos > thisPos;\n      }\n    };\n\n    XMLNode.prototype.treePosition = function(node) {\n      var found, pos;\n      pos = 0;\n      found = false;\n      this.foreachTreeNode(this.document(), function(childNode) {\n        pos++;\n        if (!found && childNode === node) {\n          return found = true;\n        }\n      });\n      if (found) {\n        return pos;\n      } else {\n        return -1;\n      }\n    };\n\n    XMLNode.prototype.foreachTreeNode = function(node, func) {\n      var child, j, len, ref2, res;\n      node || (node = this.document());\n      ref2 = node.children;\n      for (j = 0, len = ref2.length; j < len; j++) {\n        child = ref2[j];\n        if (res = func(child)) {\n          return res;\n        } else {\n          res = this.foreachTreeNode(child, func);\n          if (res) {\n            return res;\n          }\n        }\n      }\n    };\n\n    return XMLNode;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLElement, XMLNamedNodeMap, XMLNode, getValue, isFunction, isObject, ref,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, getValue = ref.getValue;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLElement = (function(superClass) {\n    extend(XMLElement, superClass);\n\n    function XMLElement(parent, name, attributes) {\n      var child, j, len, ref1;\n      XMLElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing element name. \" + this.debugInfo());\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.Element;\n      this.attribs = {};\n      this.schemaTypeInfo = null;\n      if (attributes != null) {\n        this.attribute(attributes);\n      }\n      if (parent.type === NodeType.Document) {\n        this.isRoot = true;\n        this.documentObject = parent;\n        parent.rootObject = this;\n        if (parent.children) {\n          ref1 = parent.children;\n          for (j = 0, len = ref1.length; j < len; j++) {\n            child = ref1[j];\n            if (child.type === NodeType.DocType) {\n              child.name = this.name;\n              break;\n            }\n          }\n        }\n      }\n    }\n\n    Object.defineProperty(XMLElement.prototype, 'tagName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'id', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'className', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'classList', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLElement.prototype, 'attributes', {\n      get: function() {\n        if (!this.attributeMap || !this.attributeMap.nodes) {\n          this.attributeMap = new XMLNamedNodeMap(this.attribs);\n        }\n        return this.attributeMap;\n      }\n    });\n\n    XMLElement.prototype.clone = function() {\n      var att, attName, clonedSelf, ref1;\n      clonedSelf = Object.create(this);\n      if (clonedSelf.isRoot) {\n        clonedSelf.documentObject = null;\n      }\n      clonedSelf.attribs = {};\n      ref1 = this.attribs;\n      for (attName in ref1) {\n        if (!hasProp.call(ref1, attName)) continue;\n        att = ref1[attName];\n        clonedSelf.attribs[attName] = att.clone();\n      }\n      clonedSelf.children = [];\n      this.children.forEach(function(child) {\n        var clonedChild;\n        clonedChild = child.clone();\n        clonedChild.parent = clonedSelf;\n        return clonedSelf.children.push(clonedChild);\n      });\n      return clonedSelf;\n    };\n\n    XMLElement.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLElement.prototype.removeAttribute = function(name) {\n      var attName, j, len;\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo());\n      }\n      name = getValue(name);\n      if (Array.isArray(name)) {\n        for (j = 0, len = name.length; j < len; j++) {\n          attName = name[j];\n          delete this.attribs[attName];\n        }\n      } else {\n        delete this.attribs[name];\n      }\n      return this;\n    };\n\n    XMLElement.prototype.toString = function(options) {\n      return this.options.writer.element(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLElement.prototype.att = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.a = function(name, value) {\n      return this.attribute(name, value);\n    };\n\n    XMLElement.prototype.getAttribute = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].value;\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttribute = function(name, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNode = function(name) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name];\n      } else {\n        return null;\n      }\n    };\n\n    XMLElement.prototype.setAttributeNode = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNode = function(oldAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(name) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNS = function(namespaceURI, qualifiedName, value) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.removeAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getAttributeNodeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setAttributeNodeNS = function(newAttr) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.hasAttribute = function(name) {\n      return this.attribs.hasOwnProperty(name);\n    };\n\n    XMLElement.prototype.hasAttributeNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttribute = function(name, isId) {\n      if (this.attribs.hasOwnProperty(name)) {\n        return this.attribs[name].isId;\n      } else {\n        return isId;\n      }\n    };\n\n    XMLElement.prototype.setIdAttributeNS = function(namespaceURI, localName, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.setIdAttributeNode = function(idAttr, isId) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagName = function(tagname) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByTagNameNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.getElementsByClassName = function(classNames) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLElement.prototype.isEqualNode = function(node) {\n      var i, j, ref1;\n      if (!XMLElement.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.attribs.length !== this.attribs.length) {\n        return false;\n      }\n      for (i = j = 0, ref1 = this.attribs.length - 1; 0 <= ref1 ? j <= ref1 : j >= ref1; i = 0 <= ref1 ? ++j : --j) {\n        if (!this.attribs[i].isEqualNode(node.attribs[i])) {\n          return false;\n        }\n      }\n      return true;\n    };\n\n    return XMLElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Element: 1,\n    Attribute: 2,\n    Text: 3,\n    CData: 4,\n    EntityReference: 5,\n    EntityDeclaration: 6,\n    ProcessingInstruction: 7,\n    Comment: 8,\n    Document: 9,\n    DocType: 10,\n    DocumentFragment: 11,\n    NotationDeclaration: 12,\n    Declaration: 201,\n    Raw: 202,\n    AttributeDeclaration: 203,\n    ElementDeclaration: 204,\n    Dummy: 205\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLAttribute, XMLNode;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLAttribute = (function() {\n    function XMLAttribute(parent, name, value) {\n      this.parent = parent;\n      if (this.parent) {\n        this.options = this.parent.options;\n        this.stringify = this.parent.stringify;\n      }\n      if (name == null) {\n        throw new Error(\"Missing attribute name. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.value = this.stringify.attValue(value);\n      this.type = NodeType.Attribute;\n      this.isId = false;\n      this.schemaTypeInfo = null;\n    }\n\n    Object.defineProperty(XMLAttribute.prototype, 'nodeType', {\n      get: function() {\n        return this.type;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'ownerElement', {\n      get: function() {\n        return this.parent;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'namespaceURI', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'prefix', {\n      get: function() {\n        return '';\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'localName', {\n      get: function() {\n        return this.name;\n      }\n    });\n\n    Object.defineProperty(XMLAttribute.prototype, 'specified', {\n      get: function() {\n        return true;\n      }\n    });\n\n    XMLAttribute.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLAttribute.prototype.toString = function(options) {\n      return this.options.writer.attribute(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLAttribute.prototype.debugInfo = function(name) {\n      name = name || this.name;\n      if (name == null) {\n        return \"parent: <\" + this.parent.name + \">\";\n      } else {\n        return \"attribute: {\" + name + \"}, parent: <\" + this.parent.name + \">\";\n      }\n    };\n\n    XMLAttribute.prototype.isEqualNode = function(node) {\n      if (node.namespaceURI !== this.namespaceURI) {\n        return false;\n      }\n      if (node.prefix !== this.prefix) {\n        return false;\n      }\n      if (node.localName !== this.localName) {\n        return false;\n      }\n      if (node.value !== this.value) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLAttribute;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNamedNodeMap;\n\n  module.exports = XMLNamedNodeMap = (function() {\n    function XMLNamedNodeMap(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNamedNodeMap.prototype, 'length', {\n      get: function() {\n        return Object.keys(this.nodes).length || 0;\n      }\n    });\n\n    XMLNamedNodeMap.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItem = function(name) {\n      return this.nodes[name];\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItem = function(node) {\n      var oldNode;\n      oldNode = this.nodes[node.nodeName];\n      this.nodes[node.nodeName] = node;\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItem = function(name) {\n      var oldNode;\n      oldNode = this.nodes[name];\n      delete this.nodes[name];\n      return oldNode || null;\n    };\n\n    XMLNamedNodeMap.prototype.item = function(index) {\n      return this.nodes[Object.keys(this.nodes)[index]] || null;\n    };\n\n    XMLNamedNodeMap.prototype.getNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.setNamedItemNS = function(node) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    XMLNamedNodeMap.prototype.removeNamedItemNS = function(namespaceURI, localName) {\n      throw new Error(\"This DOM method is not implemented.\");\n    };\n\n    return XMLNamedNodeMap;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCData, XMLCharacterData,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLCData = (function(superClass) {\n    extend(XMLCData, superClass);\n\n    function XMLCData(parent, text) {\n      XMLCData.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing CDATA text. \" + this.debugInfo());\n      }\n      this.name = \"#cdata-section\";\n      this.type = NodeType.CData;\n      this.value = this.stringify.cdata(text);\n    }\n\n    XMLCData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCData.prototype.toString = function(options) {\n      return this.options.writer.cdata(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLCData;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLCharacterData, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLCharacterData = (function(superClass) {\n    extend(XMLCharacterData, superClass);\n\n    function XMLCharacterData(parent) {\n      XMLCharacterData.__super__.constructor.call(this, parent);\n      this.value = '';\n    }\n\n    Object.defineProperty(XMLCharacterData.prototype, 'data', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'length', {\n      get: function() {\n        return this.value.length;\n      }\n    });\n\n    Object.defineProperty(XMLCharacterData.prototype, 'textContent', {\n      get: function() {\n        return this.value;\n      },\n      set: function(value) {\n        return this.value = value || '';\n      }\n    });\n\n    XMLCharacterData.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLCharacterData.prototype.substringData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.appendData = function(arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.insertData = function(offset, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.deleteData = function(offset, count) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.replaceData = function(offset, count, arg) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLCharacterData.prototype.isEqualNode = function(node) {\n      if (!XMLCharacterData.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.data !== this.data) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLCharacterData;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLComment,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLComment = (function(superClass) {\n    extend(XMLComment, superClass);\n\n    function XMLComment(parent, text) {\n      XMLComment.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing comment text. \" + this.debugInfo());\n      }\n      this.name = \"#comment\";\n      this.type = NodeType.Comment;\n      this.value = this.stringify.comment(text);\n    }\n\n    XMLComment.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLComment.prototype.toString = function(options) {\n      return this.options.writer.comment(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLComment;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDeclaration, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDeclaration = (function(superClass) {\n    extend(XMLDeclaration, superClass);\n\n    function XMLDeclaration(parent, version, encoding, standalone) {\n      var ref;\n      XMLDeclaration.__super__.constructor.call(this, parent);\n      if (isObject(version)) {\n        ref = version, version = ref.version, encoding = ref.encoding, standalone = ref.standalone;\n      }\n      if (!version) {\n        version = '1.0';\n      }\n      this.type = NodeType.Declaration;\n      this.version = this.stringify.xmlVersion(version);\n      if (encoding != null) {\n        this.encoding = this.stringify.xmlEncoding(encoding);\n      }\n      if (standalone != null) {\n        this.standalone = this.stringify.xmlStandalone(standalone);\n      }\n    }\n\n    XMLDeclaration.prototype.toString = function(options) {\n      return this.options.writer.declaration(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDeclaration;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDocType, XMLNamedNodeMap, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLNamedNodeMap = require('./XMLNamedNodeMap');\n\n  module.exports = XMLDocType = (function(superClass) {\n    extend(XMLDocType, superClass);\n\n    function XMLDocType(parent, pubID, sysID) {\n      var child, i, len, ref, ref1, ref2;\n      XMLDocType.__super__.constructor.call(this, parent);\n      this.type = NodeType.DocType;\n      if (parent.children) {\n        ref = parent.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.Element) {\n            this.name = child.name;\n            break;\n          }\n        }\n      }\n      this.documentObject = parent;\n      if (isObject(pubID)) {\n        ref1 = pubID, pubID = ref1.pubID, sysID = ref1.sysID;\n      }\n      if (sysID == null) {\n        ref2 = [pubID, sysID], sysID = ref2[0], pubID = ref2[1];\n      }\n      if (pubID != null) {\n        this.pubID = this.stringify.dtdPubID(pubID);\n      }\n      if (sysID != null) {\n        this.sysID = this.stringify.dtdSysID(sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDocType.prototype, 'entities', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if ((child.type === NodeType.EntityDeclaration) && !child.pe) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'notations', {\n      get: function() {\n        var child, i, len, nodes, ref;\n        nodes = {};\n        ref = this.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          if (child.type === NodeType.NotationDeclaration) {\n            nodes[child.name] = child;\n          }\n        }\n        return new XMLNamedNodeMap(nodes);\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDocType.prototype, 'internalSubset', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    XMLDocType.prototype.element = function(name, value) {\n      var child;\n      child = new XMLDTDElement(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var child;\n      child = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.entity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, false, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.pEntity = function(name, value) {\n      var child;\n      child = new XMLDTDEntity(this, true, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.notation = function(name, value) {\n      var child;\n      child = new XMLDTDNotation(this, name, value);\n      this.children.push(child);\n      return this;\n    };\n\n    XMLDocType.prototype.toString = function(options) {\n      return this.options.writer.docType(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLDocType.prototype.ele = function(name, value) {\n      return this.element(name, value);\n    };\n\n    XMLDocType.prototype.att = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      return this.attList(elementName, attributeName, attributeType, defaultValueType, defaultValue);\n    };\n\n    XMLDocType.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocType.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocType.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    XMLDocType.prototype.up = function() {\n      return this.root() || this.documentObject;\n    };\n\n    XMLDocType.prototype.isEqualNode = function(node) {\n      if (!XMLDocType.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.name !== this.name) {\n        return false;\n      }\n      if (node.publicId !== this.publicId) {\n        return false;\n      }\n      if (node.systemId !== this.systemId) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLDocType;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDAttList, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDAttList = (function(superClass) {\n    extend(XMLDTDAttList, superClass);\n\n    function XMLDTDAttList(parent, elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      XMLDTDAttList.__super__.constructor.call(this, parent);\n      if (elementName == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (attributeName == null) {\n        throw new Error(\"Missing DTD attribute name. \" + this.debugInfo(elementName));\n      }\n      if (!attributeType) {\n        throw new Error(\"Missing DTD attribute type. \" + this.debugInfo(elementName));\n      }\n      if (!defaultValueType) {\n        throw new Error(\"Missing DTD attribute default. \" + this.debugInfo(elementName));\n      }\n      if (defaultValueType.indexOf('#') !== 0) {\n        defaultValueType = '#' + defaultValueType;\n      }\n      if (!defaultValueType.match(/^(#REQUIRED|#IMPLIED|#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Invalid default value type; expected: #REQUIRED, #IMPLIED, #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      if (defaultValue && !defaultValueType.match(/^(#FIXED|#DEFAULT)$/)) {\n        throw new Error(\"Default value only applies to #FIXED or #DEFAULT. \" + this.debugInfo(elementName));\n      }\n      this.elementName = this.stringify.name(elementName);\n      this.type = NodeType.AttributeDeclaration;\n      this.attributeName = this.stringify.name(attributeName);\n      this.attributeType = this.stringify.dtdAttType(attributeType);\n      if (defaultValue) {\n        this.defaultValue = this.stringify.dtdAttDefault(defaultValue);\n      }\n      this.defaultValueType = defaultValueType;\n    }\n\n    XMLDTDAttList.prototype.toString = function(options) {\n      return this.options.writer.dtdAttList(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDAttList;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDEntity, XMLNode, isObject,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  isObject = require('./Utility').isObject;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDEntity = (function(superClass) {\n    extend(XMLDTDEntity, superClass);\n\n    function XMLDTDEntity(parent, pe, name, value) {\n      XMLDTDEntity.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD entity name. \" + this.debugInfo(name));\n      }\n      if (value == null) {\n        throw new Error(\"Missing DTD entity value. \" + this.debugInfo(name));\n      }\n      this.pe = !!pe;\n      this.name = this.stringify.name(name);\n      this.type = NodeType.EntityDeclaration;\n      if (!isObject(value)) {\n        this.value = this.stringify.dtdEntityValue(value);\n        this.internal = true;\n      } else {\n        if (!value.pubID && !value.sysID) {\n          throw new Error(\"Public and/or system identifiers are required for an external entity. \" + this.debugInfo(name));\n        }\n        if (value.pubID && !value.sysID) {\n          throw new Error(\"System identifier is required for a public external entity. \" + this.debugInfo(name));\n        }\n        this.internal = false;\n        if (value.pubID != null) {\n          this.pubID = this.stringify.dtdPubID(value.pubID);\n        }\n        if (value.sysID != null) {\n          this.sysID = this.stringify.dtdSysID(value.sysID);\n        }\n        if (value.nData != null) {\n          this.nData = this.stringify.dtdNData(value.nData);\n        }\n        if (this.pe && this.nData) {\n          throw new Error(\"Notation declaration is not allowed in a parameter entity. \" + this.debugInfo(name));\n        }\n      }\n    }\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'notationName', {\n      get: function() {\n        return this.nData || null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'inputEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlEncoding', {\n      get: function() {\n        return null;\n      }\n    });\n\n    Object.defineProperty(XMLDTDEntity.prototype, 'xmlVersion', {\n      get: function() {\n        return null;\n      }\n    });\n\n    XMLDTDEntity.prototype.toString = function(options) {\n      return this.options.writer.dtdEntity(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDEntity;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDElement, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDElement = (function(superClass) {\n    extend(XMLDTDElement, superClass);\n\n    function XMLDTDElement(parent, name, value) {\n      XMLDTDElement.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD element name. \" + this.debugInfo());\n      }\n      if (!value) {\n        value = '(#PCDATA)';\n      }\n      if (Array.isArray(value)) {\n        value = '(' + value.join(',') + ')';\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.ElementDeclaration;\n      this.value = this.stringify.dtdElementValue(value);\n    }\n\n    XMLDTDElement.prototype.toString = function(options) {\n      return this.options.writer.dtdElement(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDElement;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDTDNotation, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDTDNotation = (function(superClass) {\n    extend(XMLDTDNotation, superClass);\n\n    function XMLDTDNotation(parent, name, value) {\n      XMLDTDNotation.__super__.constructor.call(this, parent);\n      if (name == null) {\n        throw new Error(\"Missing DTD notation name. \" + this.debugInfo(name));\n      }\n      if (!value.pubID && !value.sysID) {\n        throw new Error(\"Public or system identifiers are required for an external entity. \" + this.debugInfo(name));\n      }\n      this.name = this.stringify.name(name);\n      this.type = NodeType.NotationDeclaration;\n      if (value.pubID != null) {\n        this.pubID = this.stringify.dtdPubID(value.pubID);\n      }\n      if (value.sysID != null) {\n        this.sysID = this.stringify.dtdSysID(value.sysID);\n      }\n    }\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'publicId', {\n      get: function() {\n        return this.pubID;\n      }\n    });\n\n    Object.defineProperty(XMLDTDNotation.prototype, 'systemId', {\n      get: function() {\n        return this.sysID;\n      }\n    });\n\n    XMLDTDNotation.prototype.toString = function(options) {\n      return this.options.writer.dtdNotation(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLDTDNotation;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLNode, XMLRaw,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLNode = require('./XMLNode');\n\n  module.exports = XMLRaw = (function(superClass) {\n    extend(XMLRaw, superClass);\n\n    function XMLRaw(parent, text) {\n      XMLRaw.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing raw text. \" + this.debugInfo());\n      }\n      this.type = NodeType.Raw;\n      this.value = this.stringify.raw(text);\n    }\n\n    XMLRaw.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLRaw.prototype.toString = function(options) {\n      return this.options.writer.raw(this, this.options.writer.filterOptions(options));\n    };\n\n    return XMLRaw;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLText,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLText = (function(superClass) {\n    extend(XMLText, superClass);\n\n    function XMLText(parent, text) {\n      XMLText.__super__.constructor.call(this, parent);\n      if (text == null) {\n        throw new Error(\"Missing element text. \" + this.debugInfo());\n      }\n      this.name = \"#text\";\n      this.type = NodeType.Text;\n      this.value = this.stringify.text(text);\n    }\n\n    Object.defineProperty(XMLText.prototype, 'isElementContentWhitespace', {\n      get: function() {\n        throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n      }\n    });\n\n    Object.defineProperty(XMLText.prototype, 'wholeText', {\n      get: function() {\n        var next, prev, str;\n        str = '';\n        prev = this.previousSibling;\n        while (prev) {\n          str = prev.data + str;\n          prev = prev.previousSibling;\n        }\n        str += this.data;\n        next = this.nextSibling;\n        while (next) {\n          str = str + next.data;\n          next = next.nextSibling;\n        }\n        return str;\n      }\n    });\n\n    XMLText.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLText.prototype.toString = function(options) {\n      return this.options.writer.text(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLText.prototype.splitText = function(offset) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    XMLText.prototype.replaceWholeText = function(content) {\n      throw new Error(\"This DOM method is not implemented.\" + this.debugInfo());\n    };\n\n    return XMLText;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLCharacterData, XMLProcessingInstruction,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLCharacterData = require('./XMLCharacterData');\n\n  module.exports = XMLProcessingInstruction = (function(superClass) {\n    extend(XMLProcessingInstruction, superClass);\n\n    function XMLProcessingInstruction(parent, target, value) {\n      XMLProcessingInstruction.__super__.constructor.call(this, parent);\n      if (target == null) {\n        throw new Error(\"Missing instruction target. \" + this.debugInfo());\n      }\n      this.type = NodeType.ProcessingInstruction;\n      this.target = this.stringify.insTarget(target);\n      this.name = this.target;\n      if (value) {\n        this.value = this.stringify.insValue(value);\n      }\n    }\n\n    XMLProcessingInstruction.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLProcessingInstruction.prototype.toString = function(options) {\n      return this.options.writer.processingInstruction(this, this.options.writer.filterOptions(options));\n    };\n\n    XMLProcessingInstruction.prototype.isEqualNode = function(node) {\n      if (!XMLProcessingInstruction.__super__.isEqualNode.apply(this, arguments).isEqualNode(node)) {\n        return false;\n      }\n      if (node.target !== this.target) {\n        return false;\n      }\n      return true;\n    };\n\n    return XMLProcessingInstruction;\n\n  })(XMLCharacterData);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, XMLDummy, XMLNode,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLNode = require('./XMLNode');\n\n  NodeType = require('./NodeType');\n\n  module.exports = XMLDummy = (function(superClass) {\n    extend(XMLDummy, superClass);\n\n    function XMLDummy(parent) {\n      XMLDummy.__super__.constructor.call(this, parent);\n      this.type = NodeType.Dummy;\n    }\n\n    XMLDummy.prototype.clone = function() {\n      return Object.create(this);\n    };\n\n    XMLDummy.prototype.toString = function(options) {\n      return '';\n    };\n\n    return XMLDummy;\n\n  })(XMLNode);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLNodeList;\n\n  module.exports = XMLNodeList = (function() {\n    function XMLNodeList(nodes) {\n      this.nodes = nodes;\n    }\n\n    Object.defineProperty(XMLNodeList.prototype, 'length', {\n      get: function() {\n        return this.nodes.length || 0;\n      }\n    });\n\n    XMLNodeList.prototype.clone = function() {\n      return this.nodes = null;\n    };\n\n    XMLNodeList.prototype.item = function(index) {\n      return this.nodes[index] || null;\n    };\n\n    return XMLNodeList;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    Disconnected: 1,\n    Preceding: 2,\n    Following: 4,\n    Contains: 8,\n    ContainedBy: 16,\n    ImplementationSpecific: 32\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringifier,\n    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },\n    hasProp = {}.hasOwnProperty;\n\n  module.exports = XMLStringifier = (function() {\n    function XMLStringifier(options) {\n      this.assertLegalName = bind(this.assertLegalName, this);\n      this.assertLegalChar = bind(this.assertLegalChar, this);\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      if (!this.options.version) {\n        this.options.version = '1.0';\n      }\n      ref = options.stringify || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[key] = value;\n      }\n    }\n\n    XMLStringifier.prototype.name = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalName('' + val || '');\n    };\n\n    XMLStringifier.prototype.text = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.textEscape('' + val || ''));\n    };\n\n    XMLStringifier.prototype.cdata = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      val = val.replace(']]>', ']]]]><![CDATA[>');\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.comment = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/--/)) {\n        throw new Error(\"Comment text cannot contain double-hypen: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.raw = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return '' + val || '';\n    };\n\n    XMLStringifier.prototype.attValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar(this.attEscape(val = '' + val || ''));\n    };\n\n    XMLStringifier.prototype.insTarget = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.insValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (val.match(/\\?>/)) {\n        throw new Error(\"Invalid processing instruction value: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlVersion = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/1\\.[0-9]+/)) {\n        throw new Error(\"Invalid version number: \" + val);\n      }\n      return val;\n    };\n\n    XMLStringifier.prototype.xmlEncoding = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      val = '' + val || '';\n      if (!val.match(/^[A-Za-z](?:[A-Za-z0-9._-])*$/)) {\n        throw new Error(\"Invalid encoding: \" + val);\n      }\n      return this.assertLegalChar(val);\n    };\n\n    XMLStringifier.prototype.xmlStandalone = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      if (val) {\n        return \"yes\";\n      } else {\n        return \"no\";\n      }\n    };\n\n    XMLStringifier.prototype.dtdPubID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdSysID = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdElementValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttType = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdAttDefault = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdEntityValue = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.dtdNData = function(val) {\n      if (this.options.noValidation) {\n        return val;\n      }\n      return this.assertLegalChar('' + val || '');\n    };\n\n    XMLStringifier.prototype.convertAttKey = '@';\n\n    XMLStringifier.prototype.convertPIKey = '?';\n\n    XMLStringifier.prototype.convertTextKey = '#text';\n\n    XMLStringifier.prototype.convertCDataKey = '#cdata';\n\n    XMLStringifier.prototype.convertCommentKey = '#comment';\n\n    XMLStringifier.prototype.convertRawKey = '#raw';\n\n    XMLStringifier.prototype.assertLegalChar = function(str) {\n      var regex, res;\n      if (this.options.noValidation) {\n        return str;\n      }\n      regex = '';\n      if (this.options.version === '1.0') {\n        regex = /[\\0-\\x08\\x0B\\f\\x0E-\\x1F\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      } else if (this.options.version === '1.1') {\n        regex = /[\\0\\uFFFE\\uFFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/;\n        if (res = str.match(regex)) {\n          throw new Error(\"Invalid character in string: \" + str + \" at index \" + res.index);\n        }\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.assertLegalName = function(str) {\n      var regex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      this.assertLegalChar(str);\n      regex = /^([:A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])([\\x2D\\.0-:A-Z_a-z\\xB7\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u037D\\u037F-\\u1FFF\\u200C\\u200D\\u203F\\u2040\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]|[\\uD800-\\uDB7F][\\uDC00-\\uDFFF])*$/;\n      if (!str.match(regex)) {\n        throw new Error(\"Invalid character in name\");\n      }\n      return str;\n    };\n\n    XMLStringifier.prototype.textEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\\r/g, '&#xD;');\n    };\n\n    XMLStringifier.prototype.attEscape = function(str) {\n      var ampregex;\n      if (this.options.noValidation) {\n        return str;\n      }\n      ampregex = this.options.noDoubleEncoding ? /(?!&\\S+;)&/g : /&/g;\n      return str.replace(ampregex, '&amp;').replace(/</g, '&lt;').replace(/\"/g, '&quot;').replace(/\\t/g, '&#x9;').replace(/\\n/g, '&#xA;').replace(/\\r/g, '&#xD;');\n    };\n\n    return XMLStringifier;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var XMLStringWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  module.exports = XMLStringWriter = (function(superClass) {\n    extend(XMLStringWriter, superClass);\n\n    function XMLStringWriter(options) {\n      XMLStringWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStringWriter.prototype.document = function(doc, options) {\n      var child, i, len, r, ref;\n      options = this.filterOptions(options);\n      r = '';\n      ref = doc.children;\n      for (i = 0, len = ref.length; i < len; i++) {\n        child = ref[i];\n        r += this.writeChildNode(child, options, 0);\n      }\n      if (options.pretty && r.slice(-options.newline.length) === options.newline) {\n        r = r.slice(0, -options.newline.length);\n      }\n      return r;\n    };\n\n    return XMLStringWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDummy, XMLElement, XMLProcessingInstruction, XMLRaw, XMLText, XMLWriterBase, assign,\n    hasProp = {}.hasOwnProperty;\n\n  assign = require('./Utility').assign;\n\n  NodeType = require('./NodeType');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLElement = require('./XMLElement');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDummy = require('./XMLDummy');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLWriterBase = (function() {\n    function XMLWriterBase(options) {\n      var key, ref, value;\n      options || (options = {});\n      this.options = options;\n      ref = options.writer || {};\n      for (key in ref) {\n        if (!hasProp.call(ref, key)) continue;\n        value = ref[key];\n        this[\"_\" + key] = this[key];\n        this[key] = value;\n      }\n    }\n\n    XMLWriterBase.prototype.filterOptions = function(options) {\n      var filteredOptions, ref, ref1, ref2, ref3, ref4, ref5, ref6;\n      options || (options = {});\n      options = assign({}, this.options, options);\n      filteredOptions = {\n        writer: this\n      };\n      filteredOptions.pretty = options.pretty || false;\n      filteredOptions.allowEmpty = options.allowEmpty || false;\n      filteredOptions.indent = (ref = options.indent) != null ? ref : '  ';\n      filteredOptions.newline = (ref1 = options.newline) != null ? ref1 : '\\n';\n      filteredOptions.offset = (ref2 = options.offset) != null ? ref2 : 0;\n      filteredOptions.dontPrettyTextNodes = (ref3 = (ref4 = options.dontPrettyTextNodes) != null ? ref4 : options.dontprettytextnodes) != null ? ref3 : 0;\n      filteredOptions.spaceBeforeSlash = (ref5 = (ref6 = options.spaceBeforeSlash) != null ? ref6 : options.spacebeforeslash) != null ? ref5 : '';\n      if (filteredOptions.spaceBeforeSlash === true) {\n        filteredOptions.spaceBeforeSlash = ' ';\n      }\n      filteredOptions.suppressPrettyCount = 0;\n      filteredOptions.user = {};\n      filteredOptions.state = WriterState.None;\n      return filteredOptions;\n    };\n\n    XMLWriterBase.prototype.indent = function(node, options, level) {\n      var indentLevel;\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else if (options.pretty) {\n        indentLevel = (level || 0) + options.offset + 1;\n        if (indentLevel > 0) {\n          return new Array(indentLevel).join(options.indent);\n        }\n      }\n      return '';\n    };\n\n    XMLWriterBase.prototype.endline = function(node, options, level) {\n      if (!options.pretty || options.suppressPrettyCount) {\n        return '';\n      } else {\n        return options.newline;\n      }\n    };\n\n    XMLWriterBase.prototype.attribute = function(att, options, level) {\n      var r;\n      this.openAttribute(att, options, level);\n      r = ' ' + att.name + '=\"' + att.value + '\"';\n      this.closeAttribute(att, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.cdata = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<![CDATA[';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ']]>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.comment = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!-- ';\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += ' -->' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.declaration = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?xml';\n      options.state = WriterState.InsideTag;\n      r += ' version=\"' + node.version + '\"';\n      if (node.encoding != null) {\n        r += ' encoding=\"' + node.encoding + '\"';\n      }\n      if (node.standalone != null) {\n        r += ' standalone=\"' + node.standalone + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.docType = function(node, options, level) {\n      var child, i, len, r, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      r += '<!DOCTYPE ' + node.root().name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      if (node.children.length > 0) {\n        r += ' [';\n        r += this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (i = 0, len = ref.length; i < len; i++) {\n          child = ref[i];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += ']';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, i, j, len, len1, name, prettySuppressed, r, ref, ref1, ref2;\n      level || (level = 0);\n      prettySuppressed = false;\n      r = '';\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r += this.indent(node, options, level) + '<' + node.name;\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        r += this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          r += '>';\n          options.state = WriterState.CloseTag;\n          r += '</' + node.name + '>' + this.endline(node, options, level);\n        } else {\n          options.state = WriterState.CloseTag;\n          r += options.spaceBeforeSlash + '/>' + this.endline(node, options, level);\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        r += '>';\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        r += this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        r += '</' + node.name + '>' + this.endline(node, options, level);\n      } else {\n        if (options.dontPrettyTextNodes) {\n          ref1 = node.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            if ((child.type === NodeType.Text || child.type === NodeType.Raw) && (child.value != null)) {\n              options.suppressPrettyCount++;\n              prettySuppressed = true;\n              break;\n            }\n          }\n        }\n        r += '>' + this.endline(node, options, level);\n        options.state = WriterState.InsideTag;\n        ref2 = node.children;\n        for (j = 0, len1 = ref2.length; j < len1; j++) {\n          child = ref2[j];\n          r += this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        r += this.indent(node, options, level) + '</' + node.name + '>';\n        if (prettySuppressed) {\n          options.suppressPrettyCount--;\n        }\n        r += this.endline(node, options, level);\n        options.state = WriterState.None;\n      }\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.writeChildNode = function(node, options, level) {\n      switch (node.type) {\n        case NodeType.CData:\n          return this.cdata(node, options, level);\n        case NodeType.Comment:\n          return this.comment(node, options, level);\n        case NodeType.Element:\n          return this.element(node, options, level);\n        case NodeType.Raw:\n          return this.raw(node, options, level);\n        case NodeType.Text:\n          return this.text(node, options, level);\n        case NodeType.ProcessingInstruction:\n          return this.processingInstruction(node, options, level);\n        case NodeType.Dummy:\n          return '';\n        case NodeType.Declaration:\n          return this.declaration(node, options, level);\n        case NodeType.DocType:\n          return this.docType(node, options, level);\n        case NodeType.AttributeDeclaration:\n          return this.dtdAttList(node, options, level);\n        case NodeType.ElementDeclaration:\n          return this.dtdElement(node, options, level);\n        case NodeType.EntityDeclaration:\n          return this.dtdEntity(node, options, level);\n        case NodeType.NotationDeclaration:\n          return this.dtdNotation(node, options, level);\n        default:\n          throw new Error(\"Unknown XML node type: \" + node.constructor.name);\n      }\n    };\n\n    XMLWriterBase.prototype.processingInstruction = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<?';\n      options.state = WriterState.InsideTag;\n      r += node.target;\n      if (node.value) {\n        r += ' ' + node.value;\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '?>';\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.raw = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.text = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level);\n      options.state = WriterState.InsideTag;\n      r += node.value;\n      options.state = WriterState.CloseTag;\n      r += this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdAttList = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ATTLIST';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.elementName + ' ' + node.attributeName + ' ' + node.attributeType;\n      if (node.defaultValueType !== '#DEFAULT') {\n        r += ' ' + node.defaultValueType;\n      }\n      if (node.defaultValue) {\n        r += ' \"' + node.defaultValue + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdElement = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ELEMENT';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name + ' ' + node.value;\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdEntity = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!ENTITY';\n      options.state = WriterState.InsideTag;\n      if (node.pe) {\n        r += ' %';\n      }\n      r += ' ' + node.name;\n      if (node.value) {\n        r += ' \"' + node.value + '\"';\n      } else {\n        if (node.pubID && node.sysID) {\n          r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n        } else if (node.sysID) {\n          r += ' SYSTEM \"' + node.sysID + '\"';\n        }\n        if (node.nData) {\n          r += ' NDATA ' + node.nData;\n        }\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.dtdNotation = function(node, options, level) {\n      var r;\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      r = this.indent(node, options, level) + '<!NOTATION';\n      options.state = WriterState.InsideTag;\n      r += ' ' + node.name;\n      if (node.pubID && node.sysID) {\n        r += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n      } else if (node.pubID) {\n        r += ' PUBLIC \"' + node.pubID + '\"';\n      } else if (node.sysID) {\n        r += ' SYSTEM \"' + node.sysID + '\"';\n      }\n      options.state = WriterState.CloseTag;\n      r += options.spaceBeforeSlash + '>' + this.endline(node, options, level);\n      options.state = WriterState.None;\n      this.closeNode(node, options, level);\n      return r;\n    };\n\n    XMLWriterBase.prototype.openNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.closeNode = function(node, options, level) {};\n\n    XMLWriterBase.prototype.openAttribute = function(att, options, level) {};\n\n    XMLWriterBase.prototype.closeAttribute = function(att, options, level) {};\n\n    return XMLWriterBase;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  module.exports = {\n    None: 0,\n    OpenTag: 1,\n    InsideTag: 2,\n    CloseTag: 3\n  };\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLAttribute, XMLCData, XMLComment, XMLDTDAttList, XMLDTDElement, XMLDTDEntity, XMLDTDNotation, XMLDeclaration, XMLDocType, XMLDocument, XMLDocumentCB, XMLElement, XMLProcessingInstruction, XMLRaw, XMLStringWriter, XMLStringifier, XMLText, getValue, isFunction, isObject, isPlainObject, ref,\n    hasProp = {}.hasOwnProperty;\n\n  ref = require('./Utility'), isObject = ref.isObject, isFunction = ref.isFunction, isPlainObject = ref.isPlainObject, getValue = ref.getValue;\n\n  NodeType = require('./NodeType');\n\n  XMLDocument = require('./XMLDocument');\n\n  XMLElement = require('./XMLElement');\n\n  XMLCData = require('./XMLCData');\n\n  XMLComment = require('./XMLComment');\n\n  XMLRaw = require('./XMLRaw');\n\n  XMLText = require('./XMLText');\n\n  XMLProcessingInstruction = require('./XMLProcessingInstruction');\n\n  XMLDeclaration = require('./XMLDeclaration');\n\n  XMLDocType = require('./XMLDocType');\n\n  XMLDTDAttList = require('./XMLDTDAttList');\n\n  XMLDTDEntity = require('./XMLDTDEntity');\n\n  XMLDTDElement = require('./XMLDTDElement');\n\n  XMLDTDNotation = require('./XMLDTDNotation');\n\n  XMLAttribute = require('./XMLAttribute');\n\n  XMLStringifier = require('./XMLStringifier');\n\n  XMLStringWriter = require('./XMLStringWriter');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLDocumentCB = (function() {\n    function XMLDocumentCB(options, onData, onEnd) {\n      var writerOptions;\n      this.name = \"?xml\";\n      this.type = NodeType.Document;\n      options || (options = {});\n      writerOptions = {};\n      if (!options.writer) {\n        options.writer = new XMLStringWriter();\n      } else if (isPlainObject(options.writer)) {\n        writerOptions = options.writer;\n        options.writer = new XMLStringWriter();\n      }\n      this.options = options;\n      this.writer = options.writer;\n      this.writerOptions = this.writer.filterOptions(writerOptions);\n      this.stringify = new XMLStringifier(options);\n      this.onDataCallback = onData || function() {};\n      this.onEndCallback = onEnd || function() {};\n      this.currentNode = null;\n      this.currentLevel = -1;\n      this.openTags = {};\n      this.documentStarted = false;\n      this.documentCompleted = false;\n      this.root = null;\n    }\n\n    XMLDocumentCB.prototype.createChildNode = function(node) {\n      var att, attName, attributes, child, i, len, ref1, ref2;\n      switch (node.type) {\n        case NodeType.CData:\n          this.cdata(node.value);\n          break;\n        case NodeType.Comment:\n          this.comment(node.value);\n          break;\n        case NodeType.Element:\n          attributes = {};\n          ref1 = node.attribs;\n          for (attName in ref1) {\n            if (!hasProp.call(ref1, attName)) continue;\n            att = ref1[attName];\n            attributes[attName] = att.value;\n          }\n          this.node(node.name, attributes);\n          break;\n        case NodeType.Dummy:\n          this.dummy();\n          break;\n        case NodeType.Raw:\n          this.raw(node.value);\n          break;\n        case NodeType.Text:\n          this.text(node.value);\n          break;\n        case NodeType.ProcessingInstruction:\n          this.instruction(node.target, node.value);\n          break;\n        default:\n          throw new Error(\"This XML node type is not supported in a JS object: \" + node.constructor.name);\n      }\n      ref2 = node.children;\n      for (i = 0, len = ref2.length; i < len; i++) {\n        child = ref2[i];\n        this.createChildNode(child);\n        if (child.type === NodeType.Element) {\n          this.up();\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dummy = function() {\n      return this;\n    };\n\n    XMLDocumentCB.prototype.node = function(name, attributes, text) {\n      var ref1;\n      if (name == null) {\n        throw new Error(\"Missing node name.\");\n      }\n      if (this.root && this.currentLevel === -1) {\n        throw new Error(\"Document can only have one root node. \" + this.debugInfo(name));\n      }\n      this.openCurrent();\n      name = getValue(name);\n      if (attributes == null) {\n        attributes = {};\n      }\n      attributes = getValue(attributes);\n      if (!isObject(attributes)) {\n        ref1 = [attributes, text], text = ref1[0], attributes = ref1[1];\n      }\n      this.currentNode = new XMLElement(this, name, attributes);\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      if (text != null) {\n        this.text(text);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.element = function(name, attributes, text) {\n      var child, i, len, oldValidationFlag, ref1, root;\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        this.dtdElement.apply(this, arguments);\n      } else {\n        if (Array.isArray(name) || isObject(name) || isFunction(name)) {\n          oldValidationFlag = this.options.noValidation;\n          this.options.noValidation = true;\n          root = new XMLDocument(this.options).element('TEMP_ROOT');\n          root.element(name);\n          this.options.noValidation = oldValidationFlag;\n          ref1 = root.children;\n          for (i = 0, len = ref1.length; i < len; i++) {\n            child = ref1[i];\n            this.createChildNode(child);\n            if (child.type === NodeType.Element) {\n              this.up();\n            }\n          }\n        } else {\n          this.node(name, attributes, text);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attribute = function(name, value) {\n      var attName, attValue;\n      if (!this.currentNode || this.currentNode.children) {\n        throw new Error(\"att() can only be used immediately after an ele() call in callback mode. \" + this.debugInfo(name));\n      }\n      if (name != null) {\n        name = getValue(name);\n      }\n      if (isObject(name)) {\n        for (attName in name) {\n          if (!hasProp.call(name, attName)) continue;\n          attValue = name[attName];\n          this.attribute(attName, attValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        if (this.options.keepNullAttributes && (value == null)) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, \"\");\n        } else if (value != null) {\n          this.currentNode.attribs[name] = new XMLAttribute(this, name, value);\n        }\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.text = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLText(this, value);\n      this.onData(this.writer.text(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.cdata = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLCData(this, value);\n      this.onData(this.writer.cdata(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.comment = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLComment(this, value);\n      this.onData(this.writer.comment(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.raw = function(value) {\n      var node;\n      this.openCurrent();\n      node = new XMLRaw(this, value);\n      this.onData(this.writer.raw(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.instruction = function(target, value) {\n      var i, insTarget, insValue, len, node;\n      this.openCurrent();\n      if (target != null) {\n        target = getValue(target);\n      }\n      if (value != null) {\n        value = getValue(value);\n      }\n      if (Array.isArray(target)) {\n        for (i = 0, len = target.length; i < len; i++) {\n          insTarget = target[i];\n          this.instruction(insTarget);\n        }\n      } else if (isObject(target)) {\n        for (insTarget in target) {\n          if (!hasProp.call(target, insTarget)) continue;\n          insValue = target[insTarget];\n          this.instruction(insTarget, insValue);\n        }\n      } else {\n        if (isFunction(value)) {\n          value = value.apply();\n        }\n        node = new XMLProcessingInstruction(this, target, value);\n        this.onData(this.writer.processingInstruction(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      }\n      return this;\n    };\n\n    XMLDocumentCB.prototype.declaration = function(version, encoding, standalone) {\n      var node;\n      this.openCurrent();\n      if (this.documentStarted) {\n        throw new Error(\"declaration() must be the first node.\");\n      }\n      node = new XMLDeclaration(this, version, encoding, standalone);\n      this.onData(this.writer.declaration(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.doctype = function(root, pubID, sysID) {\n      this.openCurrent();\n      if (root == null) {\n        throw new Error(\"Missing root node name.\");\n      }\n      if (this.root) {\n        throw new Error(\"dtd() must come before the root node.\");\n      }\n      this.currentNode = new XMLDocType(this, pubID, sysID);\n      this.currentNode.rootNodeName = root;\n      this.currentNode.children = false;\n      this.currentLevel++;\n      this.openTags[this.currentLevel] = this.currentNode;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.dtdElement = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDElement(this, name, value);\n      this.onData(this.writer.dtdElement(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.attList = function(elementName, attributeName, attributeType, defaultValueType, defaultValue) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDAttList(this, elementName, attributeName, attributeType, defaultValueType, defaultValue);\n      this.onData(this.writer.dtdAttList(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.entity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, false, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.pEntity = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDEntity(this, true, name, value);\n      this.onData(this.writer.dtdEntity(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.notation = function(name, value) {\n      var node;\n      this.openCurrent();\n      node = new XMLDTDNotation(this, name, value);\n      this.onData(this.writer.dtdNotation(node, this.writerOptions, this.currentLevel + 1), this.currentLevel + 1);\n      return this;\n    };\n\n    XMLDocumentCB.prototype.up = function() {\n      if (this.currentLevel < 0) {\n        throw new Error(\"The document node has no parent.\");\n      }\n      if (this.currentNode) {\n        if (this.currentNode.children) {\n          this.closeNode(this.currentNode);\n        } else {\n          this.openNode(this.currentNode);\n        }\n        this.currentNode = null;\n      } else {\n        this.closeNode(this.openTags[this.currentLevel]);\n      }\n      delete this.openTags[this.currentLevel];\n      this.currentLevel--;\n      return this;\n    };\n\n    XMLDocumentCB.prototype.end = function() {\n      while (this.currentLevel >= 0) {\n        this.up();\n      }\n      return this.onEnd();\n    };\n\n    XMLDocumentCB.prototype.openCurrent = function() {\n      if (this.currentNode) {\n        this.currentNode.children = true;\n        return this.openNode(this.currentNode);\n      }\n    };\n\n    XMLDocumentCB.prototype.openNode = function(node) {\n      var att, chunk, name, ref1;\n      if (!node.isOpen) {\n        if (!this.root && this.currentLevel === 0 && node.type === NodeType.Element) {\n          this.root = node;\n        }\n        chunk = '';\n        if (node.type === NodeType.Element) {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<' + node.name;\n          ref1 = node.attribs;\n          for (name in ref1) {\n            if (!hasProp.call(ref1, name)) continue;\n            att = ref1[name];\n            chunk += this.writer.attribute(att, this.writerOptions, this.currentLevel);\n          }\n          chunk += (node.children ? '>' : '/>') + this.writer.endline(node, this.writerOptions, this.currentLevel);\n          this.writerOptions.state = WriterState.InsideTag;\n        } else {\n          this.writerOptions.state = WriterState.OpenTag;\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '<!DOCTYPE ' + node.rootNodeName;\n          if (node.pubID && node.sysID) {\n            chunk += ' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"';\n          } else if (node.sysID) {\n            chunk += ' SYSTEM \"' + node.sysID + '\"';\n          }\n          if (node.children) {\n            chunk += ' [';\n            this.writerOptions.state = WriterState.InsideTag;\n          } else {\n            this.writerOptions.state = WriterState.CloseTag;\n            chunk += '>';\n          }\n          chunk += this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.onData(chunk, this.currentLevel);\n        return node.isOpen = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.closeNode = function(node) {\n      var chunk;\n      if (!node.isClosed) {\n        chunk = '';\n        this.writerOptions.state = WriterState.CloseTag;\n        if (node.type === NodeType.Element) {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + '</' + node.name + '>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        } else {\n          chunk = this.writer.indent(node, this.writerOptions, this.currentLevel) + ']>' + this.writer.endline(node, this.writerOptions, this.currentLevel);\n        }\n        this.writerOptions.state = WriterState.None;\n        this.onData(chunk, this.currentLevel);\n        return node.isClosed = true;\n      }\n    };\n\n    XMLDocumentCB.prototype.onData = function(chunk, level) {\n      this.documentStarted = true;\n      return this.onDataCallback(chunk, level + 1);\n    };\n\n    XMLDocumentCB.prototype.onEnd = function() {\n      this.documentCompleted = true;\n      return this.onEndCallback();\n    };\n\n    XMLDocumentCB.prototype.debugInfo = function(name) {\n      if (name == null) {\n        return \"\";\n      } else {\n        return \"node: <\" + name + \">\";\n      }\n    };\n\n    XMLDocumentCB.prototype.ele = function() {\n      return this.element.apply(this, arguments);\n    };\n\n    XMLDocumentCB.prototype.nod = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.txt = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.dat = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.com = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.ins = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.dec = function(version, encoding, standalone) {\n      return this.declaration(version, encoding, standalone);\n    };\n\n    XMLDocumentCB.prototype.dtd = function(root, pubID, sysID) {\n      return this.doctype(root, pubID, sysID);\n    };\n\n    XMLDocumentCB.prototype.e = function(name, attributes, text) {\n      return this.element(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.n = function(name, attributes, text) {\n      return this.node(name, attributes, text);\n    };\n\n    XMLDocumentCB.prototype.t = function(value) {\n      return this.text(value);\n    };\n\n    XMLDocumentCB.prototype.d = function(value) {\n      return this.cdata(value);\n    };\n\n    XMLDocumentCB.prototype.c = function(value) {\n      return this.comment(value);\n    };\n\n    XMLDocumentCB.prototype.r = function(value) {\n      return this.raw(value);\n    };\n\n    XMLDocumentCB.prototype.i = function(target, value) {\n      return this.instruction(target, value);\n    };\n\n    XMLDocumentCB.prototype.att = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.a = function() {\n      if (this.currentNode && this.currentNode.type === NodeType.DocType) {\n        return this.attList.apply(this, arguments);\n      } else {\n        return this.attribute.apply(this, arguments);\n      }\n    };\n\n    XMLDocumentCB.prototype.ent = function(name, value) {\n      return this.entity(name, value);\n    };\n\n    XMLDocumentCB.prototype.pent = function(name, value) {\n      return this.pEntity(name, value);\n    };\n\n    XMLDocumentCB.prototype.not = function(name, value) {\n      return this.notation(name, value);\n    };\n\n    return XMLDocumentCB;\n\n  })();\n\n}).call(this);\n","// Generated by CoffeeScript 1.12.7\n(function() {\n  var NodeType, WriterState, XMLStreamWriter, XMLWriterBase,\n    extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  NodeType = require('./NodeType');\n\n  XMLWriterBase = require('./XMLWriterBase');\n\n  WriterState = require('./WriterState');\n\n  module.exports = XMLStreamWriter = (function(superClass) {\n    extend(XMLStreamWriter, superClass);\n\n    function XMLStreamWriter(stream, options) {\n      this.stream = stream;\n      XMLStreamWriter.__super__.constructor.call(this, options);\n    }\n\n    XMLStreamWriter.prototype.endline = function(node, options, level) {\n      if (node.isLastRootNode && options.state === WriterState.CloseTag) {\n        return '';\n      } else {\n        return XMLStreamWriter.__super__.endline.call(this, node, options, level);\n      }\n    };\n\n    XMLStreamWriter.prototype.document = function(doc, options) {\n      var child, i, j, k, len, len1, ref, ref1, results;\n      ref = doc.children;\n      for (i = j = 0, len = ref.length; j < len; i = ++j) {\n        child = ref[i];\n        child.isLastRootNode = i === doc.children.length - 1;\n      }\n      options = this.filterOptions(options);\n      ref1 = doc.children;\n      results = [];\n      for (k = 0, len1 = ref1.length; k < len1; k++) {\n        child = ref1[k];\n        results.push(this.writeChildNode(child, options, 0));\n      }\n      return results;\n    };\n\n    XMLStreamWriter.prototype.attribute = function(att, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.attribute.call(this, att, options, level));\n    };\n\n    XMLStreamWriter.prototype.cdata = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.cdata.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.comment = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.comment.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.declaration = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.declaration.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.docType = function(node, options, level) {\n      var child, j, len, ref;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level));\n      this.stream.write('<!DOCTYPE ' + node.root().name);\n      if (node.pubID && node.sysID) {\n        this.stream.write(' PUBLIC \"' + node.pubID + '\" \"' + node.sysID + '\"');\n      } else if (node.sysID) {\n        this.stream.write(' SYSTEM \"' + node.sysID + '\"');\n      }\n      if (node.children.length > 0) {\n        this.stream.write(' [');\n        this.stream.write(this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref = node.children;\n        for (j = 0, len = ref.length; j < len; j++) {\n          child = ref[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(']');\n      }\n      options.state = WriterState.CloseTag;\n      this.stream.write(options.spaceBeforeSlash + '>');\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.element = function(node, options, level) {\n      var att, child, childNodeCount, firstChildNode, j, len, name, prettySuppressed, ref, ref1;\n      level || (level = 0);\n      this.openNode(node, options, level);\n      options.state = WriterState.OpenTag;\n      this.stream.write(this.indent(node, options, level) + '<' + node.name);\n      ref = node.attribs;\n      for (name in ref) {\n        if (!hasProp.call(ref, name)) continue;\n        att = ref[name];\n        this.attribute(att, options, level);\n      }\n      childNodeCount = node.children.length;\n      firstChildNode = childNodeCount === 0 ? null : node.children[0];\n      if (childNodeCount === 0 || node.children.every(function(e) {\n        return (e.type === NodeType.Text || e.type === NodeType.Raw) && e.value === '';\n      })) {\n        if (options.allowEmpty) {\n          this.stream.write('>');\n          options.state = WriterState.CloseTag;\n          this.stream.write('</' + node.name + '>');\n        } else {\n          options.state = WriterState.CloseTag;\n          this.stream.write(options.spaceBeforeSlash + '/>');\n        }\n      } else if (options.pretty && childNodeCount === 1 && (firstChildNode.type === NodeType.Text || firstChildNode.type === NodeType.Raw) && (firstChildNode.value != null)) {\n        this.stream.write('>');\n        options.state = WriterState.InsideTag;\n        options.suppressPrettyCount++;\n        prettySuppressed = true;\n        this.writeChildNode(firstChildNode, options, level + 1);\n        options.suppressPrettyCount--;\n        prettySuppressed = false;\n        options.state = WriterState.CloseTag;\n        this.stream.write('</' + node.name + '>');\n      } else {\n        this.stream.write('>' + this.endline(node, options, level));\n        options.state = WriterState.InsideTag;\n        ref1 = node.children;\n        for (j = 0, len = ref1.length; j < len; j++) {\n          child = ref1[j];\n          this.writeChildNode(child, options, level + 1);\n        }\n        options.state = WriterState.CloseTag;\n        this.stream.write(this.indent(node, options, level) + '</' + node.name + '>');\n      }\n      this.stream.write(this.endline(node, options, level));\n      options.state = WriterState.None;\n      return this.closeNode(node, options, level);\n    };\n\n    XMLStreamWriter.prototype.processingInstruction = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.processingInstruction.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.raw = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.raw.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.text = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.text.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdAttList = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdAttList.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdElement = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdElement.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdEntity = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdEntity.call(this, node, options, level));\n    };\n\n    XMLStreamWriter.prototype.dtdNotation = function(node, options, level) {\n      return this.stream.write(XMLStreamWriter.__super__.dtdNotation.call(this, node, options, level));\n    };\n\n    return XMLStreamWriter;\n\n  })(XMLWriterBase);\n\n}).call(this);\n"],"sourceRoot":""}